{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","Dapp/components/Login_Menu.js","Dapp/Main.js","Dapp/utils/InitWeb3.js","Dapp/components/StatusBar.js","Dapp/components/Header.js","Dapp/Login.js","Dapp/LoginControl.js","Dapp/utils/config.js","Dapp/components/card/market-card.js","Dapp/Market.js","Dapp/components/CreateTokenDrawer.js","Dapp/components/card/my-nft-card.js","Dapp/tabs/my-nft.js","Dapp/components/card/my-auction-card.js","Dapp/tabs/my-auction.js","Dapp/components/card/my-bid-card.js","Dapp/tabs/my-bid.js","Dapp/Profile.js","Dapp/Router.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Login_Menu","props","theme","mode","Item","icon","HomeOutlined","to","React","Component","Content","Layout","Footer","Title","Typography","Main","className","style","padding","textAlign","ReactDOM","render","document","getElementById","web3","window","ethereum","Web3","currentProvider","alert","Status","state","isConnected","address","balance","a","eth","getAccounts","accounts","length","getBalance","wei","utils","fromWei","console","log","this","setState","direction","size","Header","width","defaultSelectedKeys","AppstoreOutlined","AccountBookOutlined","Login","handleLoginClick","bind","enable","error","location","reload","title","type","extra","href","height","fontSize","shape","onClick","LoginControl","nftabi","abi","contractInstance","Contract","MyMarketCard","formRef","createRef","renderContent","column","bordered","label","NFT","name","description","startPrice","toString","currentprice","auctionowner","currentowner","renderOwners","header","dataSource","owners","renderItem","item","Text","mark","bidButtonDisable","tagColor","NFTState","modalVisible","onsale","setaside","methods","bidprices","id","call","ret","ownerOf","i","ownerNum","push","values","current","getFieldValue","bid","Number","toWei","price","send","from","value","message","success","info","boxShadow","margin","tags","color","disabled","src","uri","visible","okText","cancelText","onCancel","onOk","resetFields","ref","layout","initialValues","modifier","rules","required","min","max","Market","NFTs","NFTNum","NFTIds","getAllAuction","getNFTs","grid","gutter","itemLayout","client","ipfsHttpClient","CreateTokenDrawer","showDrawer","onClose","fileUrl","selectFile","NFTCreate","e","file","target","files","add","progress","prog","added","url","path","createNFT","gas","PlusOutlined","bodyStyle","paddingBottom","placeholder","TextArea","rows","onChange","onConfirm","block","htmlType","MyNFTCard","startprice","buttonDisable","sell","timespan","MyNFTTab","myNFTs","myNFTNum","refreshAuction","getNFT","code","MyAuctionCard","approve","sellerApprove","setstate","MyAuctionTab","myAuctions","myAuctionNum","getAuction","MyBidCard","claimButtonDisable","claim","MyBidTab","myBids","myBidNum","getBid","TabPane","Tabs","Profile","orientation","defaultActiveKey","tabBarExtraContent","tab","BasicRoute","exact","component"],"mappings":"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","file":"static/js/main.b4c04ea3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { HashRouter, Link } from 'react-router-dom';\r\nimport { Menu } from 'antd';\r\nimport { HomeOutlined } from '@ant-design/icons';\r\nexport default class Login_Menu extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <HashRouter>\r\n                <Menu theme=\"dark\" mode=\"horizontal\">\r\n                    <Menu.Item key=\"Main_Login\" icon={<HomeOutlined />}>\r\n                        <Link to=\"/LoginControl\">\r\n                            欢迎来到openbush的世界\r\n                        </Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './Main.css';\r\nimport { Layout } from 'antd';\r\nimport { Typography } from 'antd';\r\nimport Login_Menu from './components/Login_Menu';\r\nconst { Content, Footer } = Layout;\r\nconst { Title } = Typography;\r\n\r\nexport default class Main extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Layout className=\"layout\">\r\n                <Login_Menu />\r\n                <Content style={{ padding: '0 50px' }} >\r\n                    <div className=\"content\">\r\n                        <Title className=\"title\" >OPENBUSH</Title>\r\n                    </div>\r\n                </Content>\r\n                <Footer className=\"footer\" style={{ textAlign: 'center' }}>Openbush ©2021 Created by spring</Footer>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Main />,\r\n    document.getElementById('root'),\r\n)\r\n","import Web3 from 'web3'\r\n\r\nlet web3;\r\nif (window.ethereum) {\r\n    web3 = new Web3(window.ethereum)\r\n} else if (window.web3) {\r\n    web3 = new Web3(web3.currentProvider)\r\n} else {\r\n    alert('You need to set up MetaMask')\r\n}\r\n\r\nexport default web3;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { PageHeader, Space} from 'antd';\nimport { AccountBookOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\nimport { HashRouter, Link } from 'react-router-dom';\nimport web3 from '../utils/InitWeb3';\n\nexport default class Status extends React.Component{\n    state = {\n        isConnected: false,\n        address: 'none',\n        balance: 'none'\n    }\n    \n    async componentDidMount(){\n        let accounts = await web3.eth.getAccounts();\n        let balance;\n        if(accounts.length != 0){\n            await web3.eth.getBalance(accounts[0]).then(\n                (wei) => {\n                    balance = web3.utils.fromWei(wei, 'ether')\n                }\n            )\n            console.log(balance); \n            this.setState({\n                isConnected: true,\n                address: accounts[0],\n                balance: balance\n            })\n        }\n    }\n\n    render(){\n        return(\n            <PageHeader>\n                <Space direction=\"horizontal\" size={50}>\n                    <text>当前登陆用户: {this.state.address}</text>\n                    <text>账户余额: {this.state.balance} eth</text>\n                </Space>\n            </PageHeader>      \n        )\n    }\n}","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Layout , Menu, Space } from 'antd';\r\nimport { AccountBookOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { HashRouter, Link } from 'react-router-dom';\r\nimport Status from './StatusBar';\r\nexport default class Header extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Layout style={{ width: '100%' }}>                    \r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\r\n                    <Menu.Item key=\"Login\" icon={<AppstoreOutlined />}>\r\n                        <HashRouter>\r\n                           <Link to='/LoginControl'> \r\n                                个人账户\r\n                            </Link>\r\n                        </HashRouter>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"Market\" icon={<AccountBookOutlined />}>\r\n                        <HashRouter>\r\n                            <Link to='/Market'>                                    \r\n                                收藏品市场\r\n                            </Link>\r\n                        </HashRouter>\r\n                    </Menu.Item>\r\n                </Menu> \r\n                <Status />  \r\n            </Layout>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Layout, Card, Button, Space} from 'antd';\r\nimport { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport web3 from \"./utils/InitWeb3\";\r\nimport { HashRouter, Link } from \"react-router-dom\";\r\nimport \"./Login.css\"\r\nconst { Content, Footer } = Layout;\r\n\r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleLoginClick = this.handleLoginClick.bind(this);\r\n    }\r\n\r\n    async handleLoginClick() {\r\n        let web3Provider;\r\n        if (window.ethereum) {\r\n            web3Provider = window.ethereum;\r\n            try {\r\n                // 请求用户授权\r\n                await window.ethereum.enable();\r\n            } catch (error) {\r\n                // 用户不授权时\r\n                console.error(\"用户不同意登录\");\r\n            }\r\n        }\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <Layout className=\"layout\">\r\n                <Header />\r\n                <Content style={{ padding: '0 50px' }}>\r\n                <div className=\"site-layout-content\">\r\n                    <Card className=\"Card\" title=\"连接到您的钱包\" style={{ width: 700 }}>\r\n                        <div className=\"inner_card\">\r\n                            <br/>\r\n                            <br/>\r\n                            <Card type=\"inner\" title=\"MetaMask\" extra={<a href=\"https://metamask.io/\">MetaMask钱包下载</a>}>\r\n                                <div className=\"inside_card_content\">\r\n                                    <Space direction=\"vertical\" size={40}>\r\n                                        <br/>\r\n                                        <Button style={{width: 500, height: 40, fontSize: 17}} className=\"card_button\" type=\"primary\" shape=\"round\" onClick={this.handleLoginClick} >\r\n                                            连接Metamask\r\n                                        </Button>\r\n                                        <Button style={{width: 500, height: 40, fontSize: 17}} className=\"card_button\" type=\"primary\" shape=\"round\">\r\n                                            <HashRouter>\r\n                                                <Link to=\"./Profile\">\r\n                                                    个人账户\r\n                                                </Link>\r\n                                            </HashRouter>\r\n                                        </Button>\r\n                                        <br/>\r\n                                    </Space>\r\n                                </div>\r\n                            </Card>\r\n                            <br/>\r\n                            <br/>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Openbush ©2021 Created by spring</Footer>\r\n            </Layout>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Login;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport ReactDOM from 'react-dom';\r\nimport { Layout , Menu } from 'antd';\r\nimport { GlobalOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { HashRouter, Link } from 'react-router-dom';\r\nimport web3 from './utils/InitWeb3';\r\nimport Login from './Login';\r\n\r\nexport default class LoginControl extends React.Component{\r\n\r\n    state = {\r\n        isConnected: false,\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts();\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                isConnected: true,\r\n            })\r\n        }\r\n    }\r\n    \r\n\r\n    render(){\r\n        return <Login />\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <LoginControl />,\r\n    document.getElementById(\"root\")\r\n)","import web3 from './InitWeb3'\r\nimport Openbush from './Openbush.json'\r\n\r\n//换成自己的合约部署地址\r\nconst nftaddress = \"0xFa925Dfc73B8c9931F5f050a361Fdc9A40AB06A3\"\r\n//rinkeby: 0x38e04b472DCcEdeAfbcb92f0451191EA2bEf8fAE\r\nconst nftabi = Openbush.abi;\r\nlet contractInstance = new web3.eth.Contract(nftabi, nftaddress);\r\nexport default contractInstance;\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Tag, Image, Form, List, Typography, Layout, Button, Descriptions, PageHeader, Modal, InputNumber, message } from 'antd';\r\nimport contractInstance from '../../utils/config';\r\nimport web3 from '../../utils/InitWeb3';\r\nimport { FileProtectOutlined } from '@ant-design/icons';\r\n\r\nconst {Content} = Layout;\r\n\r\nclass MyMarketCard extends React.Component{\r\n\r\n    formRef = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            NFT: props.NFT,\r\n            isConnected: false,\r\n            address: \"\",\r\n            bidButtonDisable: false,\r\n            tagColor: \"red\",\r\n            NFTState: \"正在拍卖\",\r\n            startPrice: 0,\r\n            auctionowner: \"\",\r\n            modalVisible: false,\r\n            owners: [],\r\n        })\r\n\r\n        this.renderContent = this.renderContent.bind(this);\r\n\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        let accounts = await web3.eth.getAccounts()\r\n        if (accounts.length == 0) {\r\n            this.setState({\r\n                isConnected: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n\r\n            let NFT = this.state.NFT;\r\n\r\n            if(NFT.onsale == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖中\",\r\n                    tagColor: \"red\",\r\n                    bidButtonDisable: false,\r\n                })\r\n            }\r\n\r\n            else if(NFT.setaside == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖结束（等待申领）\",\r\n                    tagColor: \"green\",\r\n                    bidButtonDisable: true,\r\n                })\r\n            }\r\n\r\n            \r\n            //得到拍卖信息\r\n            let ret = await contractInstance.methods.bidprices(NFT.id, 0).call();\r\n            console.log(ret);\r\n            this.setState({\r\n                startPrice: ret,\r\n            })\r\n\r\n            ret = await contractInstance.methods.ownerOf(NFT.id).call();\r\n            this.setState({\r\n                auctionowner: ret,\r\n            })\r\n\r\n            //获取流转信息\r\n            try{\r\n                let owners = [], ret;\r\n                for(let i = 0; i < NFT.ownerNum; i++){\r\n                    ret = await contractInstance.methods.owners(NFT.id, i).call();\r\n                    owners.push(ret);\r\n                }\r\n                console.log(owners);\r\n                this.setState({\r\n                    owners: owners,\r\n                })\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n    \r\n    renderContent = (column = 2) =>(\r\n        <Descriptions size=\"small\" column={column} bordered>\r\n            <Descriptions.Item label=\"名称\">{this.state.NFT.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"描述\">{this.state.NFT.description}</Descriptions.Item>\r\n            <Descriptions.Item label=\"起拍价格\">{web3.utils.fromWei((this.state.startPrice).toString(), \"ether\")} ether</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高价格\">{web3.utils.fromWei((this.state.NFT.currentprice).toString(), \"ether\")}  ether</Descriptions.Item>\r\n            <Descriptions.Item label=\"收藏品所有者\">{this.state.auctionowner}</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高出价者\">{this.state.NFT.currentowner}</Descriptions.Item>\r\n        </Descriptions>\r\n    );\r\n\r\n    renderOwners = () =>(\r\n        <List\r\n        header={<div>流转信息</div>}\r\n        bordered\r\n        dataSource={this.state.owners}\r\n        renderItem={item => (\r\n            <List.Item>\r\n                <Typography.Text mark>[ADDRESS]</Typography.Text> {item}\r\n            </List.Item>\r\n      )}\r\n        />\r\n    );\r\n\r\n    //竞拍函数\r\n    async bid(){\r\n        let NFT = this.state.NFT;\r\n        let values = this.formRef.current.getFieldValue();\r\n        if(NFT.currentowner != this.state.address){\r\n            try{\r\n                let tx = await contractInstance.methods.bid(Number(NFT.id), web3.utils.toWei((values.price).toString(), \"ether\")).send({\r\n                    from: this.state.address,\r\n                    value: web3.utils.toWei('0.00000001', 'ether'),\r\n                });\r\n                message.success('竞价成功');\r\n                window.location.reload();\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n                message.error(\"竞价失败\");\r\n            }\r\n        }\r\n        else{\r\n            message.info(\"您已经是出价最高的人了\")\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{boxShadow: \"2px 2px 1px 2px #888\", margin: \"5px\"}}>\r\n                <PageHeader\r\n                    title={this.state.NFT.id}\r\n                    tags={<Tag color={this.state.tagColor}>{this.state.NFTState}</Tag>}\r\n                    extra={[\r\n                        <Button key=\"1\" type=\"primary\" disabled={this.state.bidButtonDisable} onClick={()=>this.setState({\r\n                            modalVisible: true,\r\n                        })}>\r\n                            竞价\r\n                        </Button>\r\n                    ]}\r\n                >\r\n                </PageHeader>\r\n                <Image width={200} height={200} src={this.state.NFT.uri} />\r\n                <Content>{this.renderContent()}</Content>\r\n                <Content>{this.renderOwners()}</Content>\r\n\r\n                <Modal\r\n                    visible={this.state.modalVisible}\r\n                    title=\"竞价\"\r\n                    okText=\"提交\"\r\n                    cancelText=\"取消\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            modalVisible: false,\r\n                        })\r\n                    }}\r\n                    onOk={()=>{\r\n                        this.bid();\r\n                        this.formRef.current.resetFields();\r\n                    }}>\r\n                        <Form\r\n                            ref={this.formRef}\r\n                            layout=\"vertical\"\r\n                            name=\"bidForm\"\r\n                            initialValues={{modifier: 'public'}}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"price\"\r\n                                label=\"出价\"\r\n                                rules={[{ required: true, message: '请填写您的出价' }]}\r\n                            >\r\n                                <InputNumber min={1} max={10000000000}></InputNumber>\r\n                            </Form.Item>\r\n\r\n                        </Form>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyMarketCard;","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport {Layout, List} from \"antd\";\r\n\r\nimport web3 from \"./utils/InitWeb3\";\r\nimport contractInstance from \"./utils/config\";\r\nimport MyMarketCard from \"./components/card/market-card\";\r\nimport Header from \"./components/Header\";\r\n\r\nconst {Content, Footer} = Layout;\r\nexport default class Market extends React.Component{\r\n    state={\r\n        NFTs: [],\r\n        NFTNum: 0,\r\n        isConnected: false,\r\n        address: \"\",\r\n    }\r\n\r\n    async getNFTs(NFTIds){\r\n        let NFTs = [];\r\n        let i = 0;\r\n        for(; i < 10 && NFTIds[i] != 11; i++){\r\n            let NFT = await contractInstance.methods.NFTs(NFTIds[i]).call()\r\n            NFTs.push(NFT);\r\n            console.log(NFT);\r\n        }\r\n        this.setState({\r\n            NFTs: NFTs,\r\n            NFTNum: i,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else {\r\n            await this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n\r\n            let NFTIds = await contractInstance.methods.getAllAuction().call();\r\n            console.log(NFTIds);\r\n\r\n            await this.getNFTs(NFTIds);\r\n            console.log(this.state.NFTs);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header />\r\n                <Content style={{padding: '0 50px'}}>\r\n                    <List\r\n                        grid={{ gutter: 32, column: 2 }}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={this.state.NFTs}\r\n                        renderItem={(item) =>(\r\n                            <List.Item>\r\n                                <MyMarketCard NFT={item}/>\r\n                            </List.Item>\r\n                        )}    \r\n                    >\r\n                    </List>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Openbush ©2021 Created by spring</Footer>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nReactDOM.render(\r\n    <Market />,\r\n    document.getElementById(\"root\")\r\n)","import { create as ipfsHttpClient } from 'ipfs-http-client';\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Drawer, Form, Button, Space, Input, message, InputNumber, Popconfirm, Image} from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport contractInstance  from '../utils/config';\r\nimport web3 from '../utils/InitWeb3';\r\n\r\nconst client = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\r\n\r\nexport default class CreateTokenDrawer extends React.Component{\r\n\r\n    formRef = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            fileUrl: '',\r\n            visible: false,\r\n        }\r\n        this.selectFile = this.selectFile.bind(this);\r\n        this.NFTCreate = this.NFTCreate.bind(this);\r\n    }\r\n\r\n  showDrawer = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n  };\r\n\r\n  onClose = () => {\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n  };\r\n\r\n  async selectFile(e) {\r\n      const file = e.target.files[0];\r\n      try{\r\n          const added = await client.add(\r\n              file,\r\n              {\r\n                  progress: (prog) =>console.log(`received:${prog}`)\r\n              }\r\n          );\r\n          const url = `https://ipfs.infura.io/ipfs/${added.path}`;\r\n          this.setState({\r\n              fileUrl: url,\r\n          });\r\n      }catch (error) {\r\n          alert('Error uploading file: ', error);\r\n      }\r\n  }\r\n\r\n  async NFTCreate(){ \r\n      let values = this.formRef.current.getFieldValue();\r\n      console.log(values);\r\n\r\n      let accounts = await web3.eth.getAccounts();\r\n      let uri = this.state.fileUrl;\r\n      let name = values.name;\r\n      let price = web3.utils.toWei((values.price).toString(), \"ether\");\r\n      console.log(price);\r\n      console.log(typeof(price));\r\n      let description = values.description;\r\n\r\n      console.log(uri,name,price,description);\r\n      try{\r\n        let tx = await contractInstance.methods.createNFT(uri, name, description, price).send({\r\n            from: accounts[0],\r\n            value: web3.utils.toWei('0.00000001', 'ether'),\r\n            gas: 3000000,\r\n        });\r\n        message.success('收藏品铸造成功');\r\n        window.location.reload();\r\n      }\r\n      catch(e){\r\n        console.log(e);\r\n        message.error('收藏品铸造失败');\r\n      }\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" onClick={this.showDrawer} icon={<PlusOutlined />}>\r\n            铸造新的收藏品\r\n        </Button>\r\n        <Drawer\r\n          title=\"Create NFT\"\r\n          width={720}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n\r\n        >\r\n          <Form \r\n              ref={this.formRef}\r\n              layout=\"vertical\"\r\n              name=\"nftCreateForm\" \r\n              initialValues={{modifier: 'public'}}\r\n          >\r\n                <Form.Item\r\n                  name=\"name\"\r\n                  label=\"名称\"\r\n                  rules={[{ required: true, message: '请输入收藏品名称' }]}\r\n                >\r\n                  <Input placeholder=\"收藏品名称\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"price\"\r\n                  label=\"价格（eth）\"\r\n                  rules={[{ required: true, message: '请输入收藏品价格，单位（eth）' }]}\r\n                >\r\n                  <InputNumber min={1} max={1000000} placeholder=\"收藏品价格\" style={{width: '200px'}}/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"description\"\r\n                  label=\"描述\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: '收藏品描述',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.TextArea rows={4} placeholder=\"收藏品描述\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"NFTdata\"\r\n                  label=\"文件上传\"\r\n                >\r\n                    <Input\r\n                        type=\"file\"\r\n                        name=\"NFT\"\r\n                        className=\"my-4\"\r\n                        onChange={this.selectFile}\r\n                    />\r\n                    {\r\n                        this.state.fileUrl && (\r\n                            <Image width=\"350\" src={this.state.fileUrl} />\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Space direction=\"vertical\">\r\n                  <Popconfirm title=\"确定要提交吗?\" okText=\"是\" cancelText=\"否\" onConfirm={this.NFTCreate}>\r\n                    <Button \r\n                        block='true' \r\n                        type='primary' \r\n                        htmlType=\"submit\" \r\n                        style={{width: '400px'}}\r\n                    >\r\n                        提交\r\n                    </Button>\r\n                  </Popconfirm>\r\n                  <br />\r\n                  <Button block='true' type='primary'  onClick={this.onClose}>\r\n                      取消\r\n                  </Button>\r\n                </Space>\r\n            </Form>\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Tag, Image, Form, Layout, Button, Typography, Descriptions, List, PageHeader, Modal, InputNumber, message } from 'antd';\r\nimport contractInstance from '../../utils/config';\r\nimport web3 from '../../utils/InitWeb3';\r\n\r\n\r\nconst {Content} = Layout;\r\n\r\nclass MyNFTCard extends React.Component{\r\n    formRef = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            NFT: props.NFT,\r\n            isConnected: false,\r\n            address: \"\",\r\n            buttonDisable: false,\r\n            tagColor: \"blue\",\r\n            NFTState: \"私有\",\r\n            modalVisible: false,\r\n            owners: [],\r\n        })\r\n        \r\n\r\n        this.renderContent = this.renderContent.bind(this);\r\n        this.sell = this.sell.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        let accounts = await web3.eth.getAccounts()\r\n        if (accounts.length == 0) {\r\n            this.setState({\r\n                isConnected: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n            \r\n            let NFT = this.state.NFT;\r\n            if(NFT.onsale == false && NFT.setaside == false){\r\n                this.setState({\r\n                    NFTState: \"私有\",\r\n                    tagColor: \"blue\",\r\n                    buttonDisable: false,\r\n                })\r\n            }\r\n            else if(NFT.onsale == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖中\",\r\n                    tagColor: \"red\",\r\n                    buttonDisable: true,\r\n                })\r\n            }\r\n            else if(NFT.setaside == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖结束（等待申领）\",\r\n                    tagColor: \"green\",\r\n                    buttonDisable: true,\r\n                })\r\n            }\r\n\r\n            //获取流转信息\r\n            try{\r\n                let owners = [], ret;\r\n                for(let i = 0; i < NFT.ownerNum; i++){\r\n                    ret = await contractInstance.methods.owners(NFT.id, i).call();\r\n                    owners.push(ret);\r\n                }\r\n                console.log(owners);\r\n                this.setState({\r\n                    owners: owners,\r\n                })\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n    \r\n    renderContent = (column = 3) =>(\r\n        <Descriptions size=\"small\" column={column} bordered>\r\n            <Descriptions.Item label=\"名称\">{this.state.NFT.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"描述\">{this.state.NFT.description}</Descriptions.Item>\r\n            <Descriptions.Item label=\"价格\">{web3.utils.fromWei((this.state.NFT.startprice).toString(), \"ether\")} ether</Descriptions.Item>\r\n        </Descriptions>\r\n    );\r\n\r\n    renderOwners = () =>(\r\n        <List\r\n        header={<div>流转信息</div>}\r\n        bordered\r\n        dataSource={this.state.owners}\r\n        renderItem={item => (\r\n            <List.Item>\r\n                <Typography.Text mark>[ADDRESS]</Typography.Text> {item}\r\n            </List.Item>\r\n      )}\r\n        />\r\n    );\r\n\r\n    //售卖函数\r\n    async sell(){\r\n        let NFT = this.state.NFT;\r\n        let values = this.formRef.current.getFieldValue();\r\n        console.log(NFT.id, typeof(NFT.id));\r\n        console.log(values.price, typeof(values.price));\r\n        console.log(values.timespan, typeof(values.timespan));\r\n        console.log(this.state.address)\r\n        console.log(Number(NFT.id), typeof(Number(NFT.id)))\r\n        try{\r\n            let tx = await contractInstance.methods.sell(Number(NFT.id), web3.utils.toWei((values.price).toString(), \"ether\"), values.timespan).send({\r\n                from: this.state.address,\r\n                value: web3.utils.toWei('0.00000001', 'ether'),\r\n            })\r\n            message.success('拍卖提交成功');\r\n            window.location.reload();\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            message.error(\"拍卖提交失败\");\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{boxShadow: \"2px 2px 1px 2px #888\", margin: \"5px\"}}>\r\n                <PageHeader\r\n                    title={this.state.NFT.id}\r\n                    tags={<Tag color={this.state.tagColor}>{this.state.NFTState}</Tag>}\r\n                    extra={[\r\n                        <Button key=\"1\" type=\"primary\" disabled={this.state.buttonDisable} onClick={()=>this.setState({\r\n                            modalVisible: true,\r\n                        })}>\r\n                            拍卖\r\n                        </Button>\r\n                    ]}>\r\n                </PageHeader>\r\n                <Image width={200} height={200} src={this.state.NFT.uri} />\r\n                <Content>{this.renderContent()}</Content>\r\n                <Content>{this.renderOwners()}</Content>\r\n\r\n                <Modal\r\n                    visible={this.state.modalVisible}\r\n                    title=\"拍卖\"\r\n                    okText=\"提交\"\r\n                    cancelText=\"取消\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            modalVisible: false,\r\n                        })\r\n                    }}\r\n                    onOk={()=>{\r\n                        this.sell();\r\n                        this.formRef.current.resetFields();\r\n                    }}>\r\n                        <Form\r\n                            ref={this.formRef}\r\n                            layout=\"vertical\"\r\n                            name=\"sellForm\"\r\n                            initialValues={{modifier: 'public'}}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"price\"\r\n                                label=\"起拍价格\"\r\n                                rules={[{ required: true, message: '请填写起拍价格' }]}\r\n                            >\r\n                                <InputNumber min={1} max={10000000000}></InputNumber>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"timespan\"\r\n                                label=\"拍卖期限(单位：秒)\"\r\n                                rules={[{ required: true, message: '请填写拍卖期限(最长时间30天)' }]}\r\n                            >\r\n                                <InputNumber min={60} max={30*24*3600}></InputNumber>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyNFTCard;","import React from \"react\";\r\nimport {List, message} from \"antd\";\r\n\r\nimport web3 from \"../utils/InitWeb3\";\r\nimport contractInstance from \"../utils/config\";\r\nimport MyNFTCard from \"../components/card/my-nft-card\";\r\nclass MyNFTTab extends React.Component{\r\n    state={\r\n        myNFTs: [],\r\n        myNFTNum: 0,\r\n        isConnected: false,\r\n        address: \"\",\r\n    }\r\n\r\n    async getNFTs(NFTIds){\r\n        let NFTs = [];\r\n        let i = 0;\r\n        for(; i < 10 && NFTIds[i] != 11; i++){\r\n            let NFT = await contractInstance.methods.NFTs(NFTIds[i]).call()\r\n            NFTs.push(NFT);\r\n            console.log(NFT);\r\n        }\r\n        this.setState({\r\n            myNFTs: NFTs,\r\n            myNFTNum: i,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts()\r\n        console.log(\"进来了\")\r\n        console.log(accounts[0])\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n            try{\r\n                // let NFTIds = await contractInstance.methods.getNFT().send({\r\n                //     from: accounts[0],\r\n                //     gas: 3000000,\r\n                // })\r\n                await contractInstance.methods.refreshAuction().send({\r\n                    from: accounts[0],\r\n                });\r\n                console.log(accounts[0])\r\n                let NFTIds = await contractInstance.methods.getNFT().call({\r\n                    from: accounts[0],\r\n                });\r\n                console.log(NFTIds)\r\n                await this.getNFTs(NFTIds);\r\n                console.log(this.state.myNFTs);\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n                if(e.code == 4001){\r\n                    message.info(\"钱包拒绝交易请求\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <List\r\n                    itemLayout=\"horizontal\"\r\n                    grid={{ gutter: 32, column: 2 }}\r\n                    dataSource={this.state.myNFTs}\r\n                    renderItem={(item) =>(\r\n                        <List.Item>\r\n                            <MyNFTCard NFT={item}></MyNFTCard>\r\n                        </List.Item>\r\n                    )}    \r\n                >\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyNFTTab;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Tag, Image, Layout, Button, Descriptions, PageHeader, List, Typography, message } from 'antd';\r\nimport contractInstance from '../../utils/config';\r\nimport web3 from '../../utils/InitWeb3';\r\nimport { FileProtectOutlined } from '@ant-design/icons';\r\n\r\nconst {Content} = Layout;\r\n\r\nexport default class MyAuctionCard extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            NFT: props.NFT,\r\n            isConnected: false,\r\n            address: \"\",\r\n            buttonDisable: false,\r\n            tagColor: \"red\",\r\n            NFTState: \"正在拍卖\",\r\n            startPrice: 0,\r\n            modalVisible: true,\r\n            auctionowner: \"\",\r\n            owners: [],\r\n        })\r\n\r\n        this.renderContent = this.renderContent.bind(this);\r\n        this.approve = this.approve.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        let accounts = await web3.eth.getAccounts()\r\n        if (accounts.length == 0) {\r\n            this.setState({\r\n                isConnected: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n\r\n            let NFT = this.state.NFT;\r\n            \r\n            //设定拍卖状态\r\n            if(NFT.onsale == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖中\",\r\n                    tagColor: \"red\",\r\n                    buttonDisable: true,\r\n                })\r\n            }\r\n            else if(NFT.setaside == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖结束（等待申领）\",\r\n                    tagColor: \"green\",\r\n                    buttonDisable: false,\r\n                })\r\n            }\r\n\r\n            //得到拍卖信息\r\n            let ret = await contractInstance.methods.bidprices(NFT.id, 0).call();\r\n            console.log(ret);\r\n            this.setState({\r\n                startPrice: ret,\r\n            })\r\n\r\n            ret = await contractInstance.methods.ownerOf(NFT.id).call();\r\n            this.setState({\r\n                auctionowner: ret,\r\n            })\r\n\r\n            //获取流转信息\r\n            try{\r\n                let owners = [], ret;\r\n                for(let i = 0; i < NFT.ownerNum; i++){\r\n                    ret = await contractInstance.methods.owners(NFT.id, i).call();\r\n                    owners.push(ret);\r\n                }\r\n                console.log(owners);\r\n                this.setState({\r\n                    owners: owners,\r\n                })\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n    \r\n    renderContent = (column = 2) =>(\r\n        <Descriptions size=\"small\" column={column} bordered>\r\n            <Descriptions.Item label=\"名称\">{this.state.NFT.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"描述\">{this.state.NFT.description}</Descriptions.Item>\r\n            <Descriptions.Item label=\"起拍价格\">{web3.utils.fromWei((this.state.startPrice).toString(), \"ether\")} ether</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高价格\">{web3.utils.fromWei((this.state.NFT.currentprice).toString(), \"ether\")}  ether</Descriptions.Item>\r\n            <Descriptions.Item label=\"收藏品所有者\">{this.state.auctionowner}</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高出价者\">{this.state.NFT.currentowner}</Descriptions.Item>\r\n        </Descriptions>\r\n    );\r\n\r\n    renderOwners = () =>(\r\n        <List\r\n        header={<div>流转信息</div>}\r\n        bordered\r\n        dataSource={this.state.owners}\r\n        renderItem={item => (\r\n            <List.Item>\r\n                <Typography.Text mark>[ADDRESS]</Typography.Text> {item}\r\n            </List.Item>\r\n      )}\r\n        />\r\n    );\r\n\r\n    //卖方许可函数\r\n    async approve(){\r\n        let NFT = this.state.NFT;\r\n        console.log(NFT.id);\r\n        try{\r\n            let tx = await contractInstance.methods.sellerApprove(Number(NFT.id )).send({\r\n                from: this.state.address,\r\n                gas: 30000000,\r\n            })\r\n            message.success('卖方确认交易成功');\r\n            this.setstate({\r\n                buttonDisable: true,\r\n            });\r\n            window.location.reload();\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{boxShadow: \"2px 2px 1px 2px #888\", margin: \"5px\"}}>\r\n                <PageHeader\r\n                    title= {this.state.NFT.id}\r\n                    tags={<Tag color={this.state.tagColor}>{this.state.NFTState}</Tag>}\r\n                    extra={[\r\n                        <Button key=\"1\" type=\"primary\" disabled={this.state.buttonDisable} onClick={this.approve}>\r\n                            出售许可\r\n                        </Button>\r\n                    ]}>\r\n                </PageHeader>\r\n                <Image width={200} height={200} src={this.state.NFT.uri} />\r\n                <Content>{this.renderContent()}</Content>\r\n                <Content>{this.renderOwners()}</Content>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { ReactDOM } from \"react\";\r\nimport {Button, Form, Input, List, Modal} from \"antd\";\r\n\r\nimport web3 from \"../utils/InitWeb3\";\r\nimport contractInstance from \"../utils/config\";\r\nimport MyAuctionCard from \"../components/card/my-auction-card\";\r\n\r\nclass MyAuctionTab extends React.Component{\r\n    state={\r\n        myAuctions: [],\r\n        myAuctionNum: 0,\r\n        isConnected: false,\r\n        address: \"\",\r\n    }\r\n\r\n    async getNFTs(NFTIds){\r\n        let NFTs = [];\r\n        console.log(NFTIds);\r\n        let i = 0;\r\n        for(; i < 10 && NFTIds[i] != 11; i++){\r\n            let NFT = await contractInstance.methods.NFTs(NFTIds[i]).call()\r\n            NFTs.push(NFT);\r\n            console.log(NFT);\r\n        }\r\n        this.setState({\r\n            myAuctions: NFTs,\r\n            myAuctionNum: i,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else {\r\n            await this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n            let NFTIds = await contractInstance.methods.getAuction().call({\r\n                from: accounts[0],\r\n            });\r\n            console.log(NFTIds);\r\n\r\n            await this.getNFTs(NFTIds);\r\n            console.log(this.state.myAuctions);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <List\r\n                    grid={{ gutter: 32, column: 2 }}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={this.state.myAuctions}\r\n                    renderItem={(item) =>(\r\n                        <List.Item>\r\n                            <MyAuctionCard NFT={item}/>\r\n                        </List.Item>\r\n                    )}    \r\n                >\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyAuctionTab;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Tag, Image, Form, List, Typography, Layout, Button, Descriptions, PageHeader, Modal, InputNumber, message } from 'antd';\r\nimport contractInstance from '../../utils/config';\r\nimport web3 from '../../utils/InitWeb3';\r\nimport { FileProtectOutlined } from '@ant-design/icons';\r\n\r\nconst {Content} = Layout;\r\n\r\nexport default class MyBidCard extends React.Component{\r\n\r\n    formRef = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            NFT: props.NFT,\r\n            isConnected: false,\r\n            address: \"\",\r\n            bidButtonDisable: true,\r\n            claimButtonDisable: false,\r\n            tagColor: \"red\",\r\n            NFTState: \"正在拍卖\",\r\n            modalVisible: false,\r\n            startPrice: 0,\r\n            auctionowner: \"\",\r\n            owners: [],\r\n        })\r\n\r\n        this.renderContent = this.renderContent.bind(this);\r\n        this.claim = this.claim.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        let accounts = await web3.eth.getAccounts()\r\n        if (accounts.length == 0) {\r\n            this.setState({\r\n                isConnected: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n\r\n            let NFT = this.state.NFT;\r\n            console.log(NFT.currentprice)\r\n            if(NFT.onsale == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖中\",\r\n                    tagColor: \"red\",\r\n                    bidButtonDisable: false,\r\n                    claimButtonDisable: true,\r\n                })\r\n            }\r\n            else if(NFT.setaside == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖结束（等待申领）\",\r\n                    tagColor: \"green\",\r\n                    bidButtonDisable: true,\r\n                    claimButtonDisable: false,\r\n                })\r\n            }\r\n\r\n            let ret = await contractInstance.methods.bidprices(NFT.id, 0).call();\r\n            console.log(ret);\r\n            this.setState({\r\n                startPrice: ret,\r\n            })\r\n\r\n            ret = await contractInstance.methods.ownerOf(NFT.id).call();\r\n            this.setState({\r\n                auctionowner: ret,\r\n            })\r\n\r\n            //获取流转信息\r\n            try{\r\n                let owners = [], ret;\r\n                for(let i = 0; i < NFT.ownerNum; i++){\r\n                    ret = await contractInstance.methods.owners(NFT.id, i).call();\r\n                    owners.push(ret);\r\n                }\r\n                console.log(owners);\r\n                this.setState({\r\n                    owners: owners,\r\n                })\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n    \r\n    renderContent = (column = 2) =>(\r\n        <Descriptions size=\"small\" column={column} bordered>\r\n            <Descriptions.Item label=\"名称\">{this.state.NFT.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"描述\">{this.state.NFT.description}</Descriptions.Item>\r\n            <Descriptions.Item label=\"起拍价格\">{web3.utils.fromWei((this.state.startPrice).toString(), \"ether\")} ether</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高价格\">{web3.utils.fromWei((this.state.NFT.currentprice).toString(), \"ether\")}  ether</Descriptions.Item>\r\n            <Descriptions.Item label=\"收藏品所有者\">{this.state.auctionowner}</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高出价者\">{this.state.NFT.currentowner}</Descriptions.Item>\r\n        </Descriptions>\r\n    );\r\n\r\n    renderOwners = () =>(\r\n        <List\r\n        header={<div>流转信息</div>}\r\n        bordered\r\n        dataSource={this.state.owners}\r\n        renderItem={item => (\r\n            <List.Item>\r\n                <Typography.Text mark>[ADDRESS]</Typography.Text> {item}\r\n            </List.Item>\r\n      )}\r\n        />\r\n    );\r\n\r\n    //竞拍函数\r\n    async bid(){\r\n        let NFT = this.state.NFT;\r\n        let values = this.formRef.current.getFieldValue();\r\n\r\n        if(NFT.currentowner != this.state.address){\r\n            try{\r\n                let tx = contractInstance.methods.bid(Number(NFT.id), web3.utils.toWei((values.price).toString(), \"ether\")).send({\r\n                    from: this.state.address,\r\n                    value: web3.utils.toWei('0.00000001', 'ether'),\r\n                });\r\n                message.success('竞价成功');\r\n                window.location.reload();\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n                message.error(\"竞价失败\");\r\n            }\r\n        }\r\n        else{\r\n            message.info(\"您已经是出价最高的人了\")\r\n        }\r\n    }\r\n\r\n    async claim(){\r\n        let NFT = this.state.NFT;\r\n        if(NFT.currentowner == this.state.address){\r\n            try{\r\n                let tx = await contractInstance.methods.claim(Number(NFT.id)).send({\r\n                    from: this.state.address,\r\n                    value: NFT.currentprice,\r\n                })\r\n                message.success('认领成功');\r\n                window.location.reload();\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n                message.error(\"认领失败\");\r\n            }\r\n        }\r\n        else{\r\n            message.error(\"非竞拍成功者不可认领\");\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{boxShadow: \"2px 2px 1px 2px #888\", margin: \"5px\"}}>\r\n                <PageHeader\r\n                    title={this.state.NFT.id}\r\n                    tags={<Tag color={this.state.tagColor}>{this.state.NFTState}</Tag>}\r\n                    extra={[\r\n                        <Button key=\"1\" type=\"primary\" disabled={this.state.bidButtonDisable} onClick={()=>this.setState({\r\n                            modalVisible: true,\r\n                        })}>\r\n                            竞价\r\n                        </Button>\r\n                        \r\n                    ],\r\n                    [\r\n                        <Button key=\"2\" type=\"primary\" disabled={this.state.claimButtonDisable} onClick={this.claim}>\r\n                            认领\r\n                        </Button>\r\n                    ]}>\r\n                </PageHeader>\r\n                <Image width={200} height={200} src={this.state.NFT.uri} />\r\n                <Content>{this.renderContent()}</Content>\r\n                <Content>{this.renderOwners()}</Content>\r\n\r\n                <Modal\r\n                    visible={this.state.modalVisible}\r\n                    title=\"竞价\"\r\n                    okText=\"提交\"\r\n                    cancelText=\"取消\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            modalVisible: false,\r\n                        })\r\n                    }}\r\n                    onOk={()=>{\r\n                        this.bid();\r\n                        this.formRef.current.resetFields();\r\n                    }}>\r\n                        <Form\r\n                            ref={this.formRef}\r\n                            layout=\"vertical\"\r\n                            name=\"bidForm\"\r\n                            initialValues={{modifier: 'public'}}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"price\"\r\n                                label=\"出价\"\r\n                                rules={[{ required: true, message: '请填写您的出价' }]}\r\n                            >\r\n                                <InputNumber min={1} max={10000000000}></InputNumber>\r\n                            </Form.Item>\r\n\r\n                        </Form>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { ReactDOM } from \"react\";\r\nimport {Button, Form, Input, List, Modal} from \"antd\";\r\n\r\nimport web3 from \"../utils/InitWeb3\";\r\nimport contractInstance from \"../utils/config\";\r\nimport MyBidCard from \"../components/card/my-bid-card\";\r\n\r\nclass MyBidTab extends React.Component{\r\n    state={\r\n        myBids: [],\r\n        myBidNum: 0,\r\n        isConnected: false,\r\n        address: \"\",\r\n    }\r\n\r\n    async getNFTs(NFTIds){\r\n        let NFTs = [];\r\n        let i = 0;\r\n        for(; i < 10 && NFTIds[i] != 11; i++){\r\n            let NFT = await contractInstance.methods.NFTs(NFTIds[i]).call()\r\n            NFTs.push(NFT);\r\n            console.log(NFT);\r\n        }\r\n        this.setState({\r\n            myBids: NFTs,\r\n            myBidNum: i,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else {\r\n            await this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n            // let tx = await contractInstance.methods.refreshAuction().send({\r\n            //     from: accounts[0],\r\n            //     gas: 3000000,\r\n            // });\r\n\r\n            let NFTIds = await contractInstance.methods.getBid().call({\r\n                from: accounts[0],\r\n            });\r\n            console.log(NFTIds);\r\n\r\n            await this.getNFTs(NFTIds);\r\n            console.log(this.state.myBids);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <List\r\n                    grid={{ gutter: 32, column: 2 }}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={this.state.myBids}\r\n                    renderItem={(item) =>(\r\n                        <List.Item>\r\n                            <MyBidCard NFT={item}/>\r\n                        </List.Item>\r\n                    )}    \r\n                >\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyBidTab;","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Layout, Tabs, Divider} from 'antd';\r\nimport Header from './components/Header';\r\nimport CreateTokenDrawer from './components/CreateTokenDrawer';\r\nimport MyNFTTab from './tabs/my-nft'\r\nimport MyAuctionTab from \"./tabs/my-auction\";\r\nimport MyBidTab from \"./tabs/my-bid\";\r\n\r\nconst {Content, Footer} = Layout;\r\nconst {TabPane} = Tabs;\r\n\r\nexport default class Profile extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Layout className=\"layout\" >\r\n                <Header />\r\n                <Content style={{padding: '0 50px'}}>\r\n                    <Divider orientation=\"left\">我的藏品</Divider>\r\n                    \r\n                    <Tabs defaultActiveKey=\"1\" tabBarExtraContent={\r\n                        <CreateTokenDrawer />\r\n                    }>\r\n\r\n                            <TabPane tab=\"我的NFT\" key=\"1\">\r\n                                <MyNFTTab />\r\n                            </TabPane>\r\n                            <TabPane tab=\"正在出售的NFT\" key=\"2\">\r\n                                <MyAuctionTab />\r\n                            </TabPane>\r\n                            <TabPane tab=\"我竞拍的NFT\" key=\"3\">\r\n                                <MyBidTab />\r\n                            </TabPane>\r\n                    </Tabs>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Openbush ©2021 Created by spring</Footer>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Profile />,\r\n    document.getElementById(\"root\")\r\n)","import React  from \"react\";\r\nimport {HashRouter, Route, Switch}from 'react-router-dom';\r\nimport Main from './Main';\r\nimport LoginControl from './LoginControl';\r\nimport Market from './Market';\r\nimport Profile from \"./Profile\";\r\n\r\nconst BasicRoute = ()=> (\r\n    <HashRouter>\r\n        <Switch>\r\n            <Route exact path = \"/\" component={Main}/>\r\n            <Route exact path = \"/LoginControl\" component={LoginControl}/>\r\n            <Route exact path = \"/Market\" component={Market}/>\r\n            <Route exact path = \"/Profile\" component={Profile}/>\r\n        </Switch>\r\n    </HashRouter>\r\n);\r\n\r\nexport default BasicRoute;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport BaseRoute from \"./Dapp/Router\"\n\nReactDOM.render(\n  <BaseRoute />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}