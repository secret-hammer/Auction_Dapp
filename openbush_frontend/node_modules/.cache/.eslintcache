[{"/Users/apple/Documents/openbush/openbush_frontend/src/index.js":"1","/Users/apple/Documents/openbush/openbush_frontend/src/reportWebVitals.js":"2","/Users/apple/Documents/openbush/openbush_frontend/src/App.js":"3","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/Main.js":"4","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/Login_Menu.js":"5","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/Router.js":"6","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/Market.js":"7","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/LoginControl.js":"8","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/Profile.js":"9","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/Login.js":"10","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/Header.js":"11","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/card/market-card.js":"12","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/utils/config.js":"13","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/utils/InitWeb3.js":"14","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/CreateTokenDrawer.js":"15","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/tabs/my-nft.js":"16","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/tabs/my-auction.js":"17","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/tabs/my-bid.js":"18","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/card/my-nft-card.js":"19","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/card/my-auction-card.js":"20","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/card/my-bid-card.js":"21","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/StatusBar.js":"22"},{"size":499,"mtime":1636040971200,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1636040971200,"results":"25","hashOfConfig":"24"},{"size":528,"mtime":1636040971187,"results":"26","hashOfConfig":"24"},{"size":988,"mtime":1636040971189,"results":"27","hashOfConfig":"24"},{"size":745,"mtime":1636040971190,"results":"28","hashOfConfig":"24"},{"size":624,"mtime":1636040971190,"results":"29","hashOfConfig":"24"},{"size":2275,"mtime":1636040971189,"results":"30","hashOfConfig":"24"},{"size":984,"mtime":1636040971188,"results":"31","hashOfConfig":"24"},{"size":1683,"mtime":1636040971189,"results":"32","hashOfConfig":"24"},{"size":3072,"mtime":1636040971188,"results":"33","hashOfConfig":"24"},{"size":1362,"mtime":1636040971190,"results":"34","hashOfConfig":"24"},{"size":6911,"mtime":1636040971191,"results":"35","hashOfConfig":"24"},{"size":361,"mtime":1636040971198,"results":"36","hashOfConfig":"24"},{"size":247,"mtime":1636040971192,"results":"37","hashOfConfig":"24"},{"size":5309,"mtime":1636040971190,"results":"38","hashOfConfig":"24"},{"size":2572,"mtime":1636040971192,"results":"39","hashOfConfig":"24"},{"size":2030,"mtime":1636040971192,"results":"40","hashOfConfig":"24"},{"size":2127,"mtime":1636040971192,"results":"41","hashOfConfig":"24"},{"size":6820,"mtime":1636040971191,"results":"42","hashOfConfig":"24"},{"size":5346,"mtime":1636040971191,"results":"43","hashOfConfig":"24"},{"size":7960,"mtime":1636040971191,"results":"44","hashOfConfig":"24"},{"size":1287,"mtime":1636040971190,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"101m9ov",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},"/Users/apple/Documents/openbush/openbush_frontend/src/index.js",["107"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport BaseRoute from \"./Dapp/Router\"\n\nReactDOM.render(\n  <BaseRoute />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/apple/Documents/openbush/openbush_frontend/src/reportWebVitals.js",[],"/Users/apple/Documents/openbush/openbush_frontend/src/App.js",[],"/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/Main.js",["108","109"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './Main.css';\r\nimport { Layout } from 'antd';\r\nimport { Typography } from 'antd';\r\nimport Login_Menu from './components/Login_Menu';\r\nconst { Content, Footer } = Layout;\r\nconst { Title } = Typography;\r\n\r\nexport default class Main extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Layout className=\"layout\">\r\n                <Login_Menu />\r\n                <Content style={{ padding: '0 50px' }} >\r\n                    <div className=\"content\">\r\n                        <Title className=\"title\" >OPENBUSH</Title>\r\n                    </div>\r\n                </Content>\r\n                <Footer className=\"footer\" style={{ textAlign: 'center' }}>Openbush ©2021 Created by spring</Footer>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Main />,\r\n    document.getElementById('root'),\r\n)\r\n","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/Login_Menu.js",["110"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { HashRouter, Link } from 'react-router-dom';\r\nimport { Menu } from 'antd';\r\nimport { HomeOutlined } from '@ant-design/icons';\r\nexport default class Login_Menu extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <HashRouter>\r\n                <Menu theme=\"dark\" mode=\"horizontal\">\r\n                    <Menu.Item key=\"Main_Login\" icon={<HomeOutlined />}>\r\n                        <Link to=\"/LoginControl\">\r\n                            欢迎来到openbush的世界\r\n                        </Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/Router.js",[],"/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/Market.js",["111","112"],"import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport {Layout, List} from \"antd\";\r\n\r\nimport web3 from \"./utils/InitWeb3\";\r\nimport contractInstance from \"./utils/config\";\r\nimport MyMarketCard from \"./components/card/market-card\";\r\nimport Header from \"./components/Header\";\r\n\r\nconst {Content, Footer} = Layout;\r\nexport default class Market extends React.Component{\r\n    state={\r\n        NFTs: [],\r\n        NFTNum: 0,\r\n        isConnected: false,\r\n        address: \"\",\r\n    }\r\n\r\n    async getNFTs(NFTIds){\r\n        let NFTs = [];\r\n        let i = 0;\r\n        for(; i < 10 && NFTIds[i] != 11; i++){\r\n            let NFT = await contractInstance.methods.NFTs(NFTIds[i]).call()\r\n            NFTs.push(NFT);\r\n            console.log(NFT);\r\n        }\r\n        this.setState({\r\n            NFTs: NFTs,\r\n            NFTNum: i,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else {\r\n            await this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n\r\n            let NFTIds = await contractInstance.methods.getAllAuction().call();\r\n            console.log(NFTIds);\r\n\r\n            await this.getNFTs(NFTIds);\r\n            console.log(this.state.NFTs);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header />\r\n                <Content style={{padding: '0 50px'}}>\r\n                    <List\r\n                        grid={{ gutter: 32, column: 2 }}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={this.state.NFTs}\r\n                        renderItem={(item) =>(\r\n                            <List.Item>\r\n                                <MyMarketCard NFT={item}/>\r\n                            </List.Item>\r\n                        )}    \r\n                    >\r\n                    </List>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Openbush ©2021 Created by spring</Footer>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nReactDOM.render(\r\n    <Market />,\r\n    document.getElementById(\"root\")\r\n)","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/LoginControl.js",["113","114","115","116","117","118","119","120","121"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport ReactDOM from 'react-dom';\r\nimport { Layout , Menu } from 'antd';\r\nimport { GlobalOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { HashRouter, Link } from 'react-router-dom';\r\nimport web3 from './utils/InitWeb3';\r\nimport Login from './Login';\r\n\r\nexport default class LoginControl extends React.Component{\r\n\r\n    state = {\r\n        isConnected: false,\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts();\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                isConnected: true,\r\n            })\r\n        }\r\n    }\r\n    \r\n\r\n    render(){\r\n        return <Login />\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <LoginControl />,\r\n    document.getElementById(\"root\")\r\n)","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/Profile.js",["122"],"import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Layout, Tabs, Divider} from 'antd';\r\nimport Header from './components/Header';\r\nimport CreateTokenDrawer from './components/CreateTokenDrawer';\r\nimport MyNFTTab from './tabs/my-nft'\r\nimport MyAuctionTab from \"./tabs/my-auction\";\r\nimport MyBidTab from \"./tabs/my-bid\";\r\n\r\nconst {Content, Footer} = Layout;\r\nconst {TabPane} = Tabs;\r\n\r\nexport default class Profile extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Layout className=\"layout\" >\r\n                <Header />\r\n                <Content style={{padding: '0 50px'}}>\r\n                    <Divider orientation=\"left\">我的藏品</Divider>\r\n                    \r\n                    <Tabs defaultActiveKey=\"1\" tabBarExtraContent={\r\n                        <CreateTokenDrawer />\r\n                    }>\r\n\r\n                            <TabPane tab=\"我的NFT\" key=\"1\">\r\n                                <MyNFTTab />\r\n                            </TabPane>\r\n                            <TabPane tab=\"正在出售的NFT\" key=\"2\">\r\n                                <MyAuctionTab />\r\n                            </TabPane>\r\n                            <TabPane tab=\"我竞拍的NFT\" key=\"3\">\r\n                                <MyBidTab />\r\n                            </TabPane>\r\n                    </Tabs>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Openbush ©2021 Created by spring</Footer>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Profile />,\r\n    document.getElementById(\"root\")\r\n)","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/Login.js",["123","124","125"],"import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Layout, Card, Button, Space} from 'antd';\r\nimport { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport web3 from \"./utils/InitWeb3\";\r\nimport { HashRouter, Link } from \"react-router-dom\";\r\nimport \"./Login.css\"\r\nconst { Content, Footer } = Layout;\r\n\r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleLoginClick = this.handleLoginClick.bind(this);\r\n    }\r\n\r\n    async handleLoginClick() {\r\n        let web3Provider;\r\n        if (window.ethereum) {\r\n            web3Provider = window.ethereum;\r\n            try {\r\n                // 请求用户授权\r\n                await window.ethereum.enable();\r\n            } catch (error) {\r\n                // 用户不授权时\r\n                console.error(\"用户不同意登录\");\r\n            }\r\n        }\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <Layout className=\"layout\">\r\n                <Header />\r\n                <Content style={{ padding: '0 50px' }}>\r\n                <div className=\"site-layout-content\">\r\n                    <Card className=\"Card\" title=\"连接到您的钱包\" style={{ width: 700 }}>\r\n                        <div className=\"inner_card\">\r\n                            <br/>\r\n                            <br/>\r\n                            <Card type=\"inner\" title=\"MetaMask\" extra={<a href=\"https://metamask.io/\">MetaMask钱包下载</a>}>\r\n                                <div className=\"inside_card_content\">\r\n                                    <Space direction=\"vertical\" size={40}>\r\n                                        <br/>\r\n                                        <Button style={{width: 500, height: 40, fontSize: 17}} className=\"card_button\" type=\"primary\" shape=\"round\" onClick={this.handleLoginClick} >\r\n                                            连接Metamask\r\n                                        </Button>\r\n                                        <Button style={{width: 500, height: 40, fontSize: 17}} className=\"card_button\" type=\"primary\" shape=\"round\">\r\n                                            <HashRouter>\r\n                                                <Link to=\"./Profile\">\r\n                                                    个人账户\r\n                                                </Link>\r\n                                            </HashRouter>\r\n                                        </Button>\r\n                                        <br/>\r\n                                    </Space>\r\n                                </div>\r\n                            </Card>\r\n                            <br/>\r\n                            <br/>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Openbush ©2021 Created by spring</Footer>\r\n            </Layout>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Login;","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/Header.js",["126","127","128"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Layout , Menu, Space } from 'antd';\r\nimport { AccountBookOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { HashRouter, Link } from 'react-router-dom';\r\nimport Status from './StatusBar';\r\nexport default class Header extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Layout style={{ width: '100%' }}>                    \r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\r\n                    <Menu.Item key=\"Login\" icon={<AppstoreOutlined />}>\r\n                        <HashRouter>\r\n                           <Link to='/LoginControl'> \r\n                                个人账户\r\n                            </Link>\r\n                        </HashRouter>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"Market\" icon={<AccountBookOutlined />}>\r\n                        <HashRouter>\r\n                            <Link to='/Market'>                                    \r\n                                收藏品市场\r\n                            </Link>\r\n                        </HashRouter>\r\n                    </Menu.Item>\r\n                </Menu> \r\n                <Status />  \r\n            </Layout>\r\n        )\r\n    }\r\n}","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/card/market-card.js",["129","130","131","132","133","134"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Tag, Image, Form, List, Typography, Layout, Button, Descriptions, PageHeader, Modal, InputNumber, message } from 'antd';\r\nimport contractInstance from '../../utils/config';\r\nimport web3 from '../../utils/InitWeb3';\r\nimport { FileProtectOutlined } from '@ant-design/icons';\r\n\r\nconst {Content} = Layout;\r\n\r\nclass MyMarketCard extends React.Component{\r\n\r\n    formRef = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            NFT: props.NFT,\r\n            isConnected: false,\r\n            address: \"\",\r\n            bidButtonDisable: false,\r\n            tagColor: \"red\",\r\n            NFTState: \"正在拍卖\",\r\n            startPrice: 0,\r\n            auctionowner: \"\",\r\n            modalVisible: false,\r\n            owners: [],\r\n        })\r\n\r\n        this.renderContent = this.renderContent.bind(this);\r\n\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        let accounts = await web3.eth.getAccounts()\r\n        if (accounts.length == 0) {\r\n            this.setState({\r\n                isConnected: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n\r\n            let NFT = this.state.NFT;\r\n\r\n            if(NFT.onsale == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖中\",\r\n                    tagColor: \"red\",\r\n                    bidButtonDisable: false,\r\n                })\r\n            }\r\n\r\n            else if(NFT.setaside == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖结束（等待申领）\",\r\n                    tagColor: \"green\",\r\n                    bidButtonDisable: true,\r\n                })\r\n            }\r\n\r\n            \r\n            //得到拍卖信息\r\n            let ret = await contractInstance.methods.bidprices(NFT.id, 0).call();\r\n            console.log(ret);\r\n            this.setState({\r\n                startPrice: ret,\r\n            })\r\n\r\n            ret = await contractInstance.methods.ownerOf(NFT.id).call();\r\n            this.setState({\r\n                auctionowner: ret,\r\n            })\r\n\r\n            //获取流转信息\r\n            try{\r\n                let owners = [], ret;\r\n                for(let i = 0; i < NFT.ownerNum; i++){\r\n                    ret = await contractInstance.methods.owners(NFT.id, i).call();\r\n                    owners.push(ret);\r\n                }\r\n                console.log(owners);\r\n                this.setState({\r\n                    owners: owners,\r\n                })\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n    \r\n    renderContent = (column = 2) =>(\r\n        <Descriptions size=\"small\" column={column} bordered>\r\n            <Descriptions.Item label=\"名称\">{this.state.NFT.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"描述\">{this.state.NFT.description}</Descriptions.Item>\r\n            <Descriptions.Item label=\"起拍价格\">{web3.utils.fromWei((this.state.startPrice).toString(), \"ether\")} ether</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高价格\">{web3.utils.fromWei((this.state.NFT.currentprice).toString(), \"ether\")}  ether</Descriptions.Item>\r\n            <Descriptions.Item label=\"收藏品所有者\">{this.state.auctionowner}</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高出价者\">{this.state.NFT.currentowner}</Descriptions.Item>\r\n        </Descriptions>\r\n    );\r\n\r\n    renderOwners = () =>(\r\n        <List\r\n        header={<div>流转信息</div>}\r\n        bordered\r\n        dataSource={this.state.owners}\r\n        renderItem={item => (\r\n            <List.Item>\r\n                <Typography.Text mark>[ADDRESS]</Typography.Text> {item}\r\n            </List.Item>\r\n      )}\r\n        />\r\n    );\r\n\r\n    //竞拍函数\r\n    async bid(){\r\n        let NFT = this.state.NFT;\r\n        let values = this.formRef.current.getFieldValue();\r\n        if(NFT.currentowner != this.state.address){\r\n            try{\r\n                let tx = await contractInstance.methods.bid(Number(NFT.id), web3.utils.toWei((values.price).toString(), \"ether\")).send({\r\n                    from: this.state.address,\r\n                    value: web3.utils.toWei('0.00000001', 'ether'),\r\n                });\r\n                message.success('竞价成功');\r\n                window.location.reload();\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n                message.error(\"竞价失败\");\r\n            }\r\n        }\r\n        else{\r\n            message.info(\"您已经是出价最高的人了\")\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{boxShadow: \"2px 2px 1px 2px #888\", margin: \"5px\"}}>\r\n                <PageHeader\r\n                    title={this.state.NFT.id}\r\n                    tags={<Tag color={this.state.tagColor}>{this.state.NFTState}</Tag>}\r\n                    extra={[\r\n                        <Button key=\"1\" type=\"primary\" disabled={this.state.bidButtonDisable} onClick={()=>this.setState({\r\n                            modalVisible: true,\r\n                        })}>\r\n                            竞价\r\n                        </Button>\r\n                    ]}\r\n                >\r\n                </PageHeader>\r\n                <Image width={200} height={200} src={this.state.NFT.uri} />\r\n                <Content>{this.renderContent()}</Content>\r\n                <Content>{this.renderOwners()}</Content>\r\n\r\n                <Modal\r\n                    visible={this.state.modalVisible}\r\n                    title=\"竞价\"\r\n                    okText=\"提交\"\r\n                    cancelText=\"取消\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            modalVisible: false,\r\n                        })\r\n                    }}\r\n                    onOk={()=>{\r\n                        this.bid();\r\n                        this.formRef.current.resetFields();\r\n                    }}>\r\n                        <Form\r\n                            ref={this.formRef}\r\n                            layout=\"vertical\"\r\n                            name=\"bidForm\"\r\n                            initialValues={{modifier: 'public'}}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"price\"\r\n                                label=\"出价\"\r\n                                rules={[{ required: true, message: '请填写您的出价' }]}\r\n                            >\r\n                                <InputNumber min={1} max={10000000000}></InputNumber>\r\n                            </Form.Item>\r\n\r\n                        </Form>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyMarketCard;","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/utils/config.js",[],"/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/utils/InitWeb3.js",[],"/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/CreateTokenDrawer.js",["135"],"import { create as ipfsHttpClient } from 'ipfs-http-client';\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Drawer, Form, Button, Space, Input, message, InputNumber, Popconfirm, Image} from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport contractInstance  from '../utils/config';\r\nimport web3 from '../utils/InitWeb3';\r\n\r\nconst client = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\r\n\r\nexport default class CreateTokenDrawer extends React.Component{\r\n\r\n    formRef = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            fileUrl: '',\r\n            visible: false,\r\n        }\r\n        this.selectFile = this.selectFile.bind(this);\r\n        this.NFTCreate = this.NFTCreate.bind(this);\r\n    }\r\n\r\n  showDrawer = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n  };\r\n\r\n  onClose = () => {\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n  };\r\n\r\n  async selectFile(e) {\r\n      const file = e.target.files[0];\r\n      try{\r\n          const added = await client.add(\r\n              file,\r\n              {\r\n                  progress: (prog) =>console.log(`received:${prog}`)\r\n              }\r\n          );\r\n          const url = `https://ipfs.infura.io/ipfs/${added.path}`;\r\n          this.setState({\r\n              fileUrl: url,\r\n          });\r\n      }catch (error) {\r\n          alert('Error uploading file: ', error);\r\n      }\r\n  }\r\n\r\n  async NFTCreate(){ \r\n      let values = this.formRef.current.getFieldValue();\r\n      console.log(values);\r\n\r\n      let accounts = await web3.eth.getAccounts();\r\n      let uri = this.state.fileUrl;\r\n      let name = values.name;\r\n      let price = web3.utils.toWei((values.price).toString(), \"ether\");\r\n      console.log(price);\r\n      console.log(typeof(price));\r\n      let description = values.description;\r\n\r\n      console.log(uri,name,price,description);\r\n      try{\r\n        let tx = await contractInstance.methods.createNFT(uri, name, description, price).send({\r\n            from: accounts[0],\r\n            value: web3.utils.toWei('0.00000001', 'ether'),\r\n            gas: 3000000,\r\n        });\r\n        message.success('收藏品铸造成功');\r\n        window.location.reload();\r\n      }\r\n      catch(e){\r\n        console.log(e);\r\n        message.error('收藏品铸造失败');\r\n      }\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button type=\"primary\" onClick={this.showDrawer} icon={<PlusOutlined />}>\r\n            铸造新的收藏品\r\n        </Button>\r\n        <Drawer\r\n          title=\"Create NFT\"\r\n          width={720}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n\r\n        >\r\n          <Form \r\n              ref={this.formRef}\r\n              layout=\"vertical\"\r\n              name=\"nftCreateForm\" \r\n              initialValues={{modifier: 'public'}}\r\n          >\r\n                <Form.Item\r\n                  name=\"name\"\r\n                  label=\"名称\"\r\n                  rules={[{ required: true, message: '请输入收藏品名称' }]}\r\n                >\r\n                  <Input placeholder=\"收藏品名称\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"price\"\r\n                  label=\"价格（eth）\"\r\n                  rules={[{ required: true, message: '请输入收藏品价格，单位（eth）' }]}\r\n                >\r\n                  <InputNumber min={1} max={1000000} placeholder=\"收藏品价格\" style={{width: '200px'}}/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"description\"\r\n                  label=\"描述\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: '收藏品描述',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.TextArea rows={4} placeholder=\"收藏品描述\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"NFTdata\"\r\n                  label=\"文件上传\"\r\n                >\r\n                    <Input\r\n                        type=\"file\"\r\n                        name=\"NFT\"\r\n                        className=\"my-4\"\r\n                        onChange={this.selectFile}\r\n                    />\r\n                    {\r\n                        this.state.fileUrl && (\r\n                            <Image width=\"350\" src={this.state.fileUrl} />\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n                <Space direction=\"vertical\">\r\n                  <Popconfirm title=\"确定要提交吗?\" okText=\"是\" cancelText=\"否\" onConfirm={this.NFTCreate}>\r\n                    <Button \r\n                        block='true' \r\n                        type='primary' \r\n                        htmlType=\"submit\" \r\n                        style={{width: '400px'}}\r\n                    >\r\n                        提交\r\n                    </Button>\r\n                  </Popconfirm>\r\n                  <br />\r\n                  <Button block='true' type='primary'  onClick={this.onClose}>\r\n                      取消\r\n                  </Button>\r\n                </Space>\r\n            </Form>\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/tabs/my-nft.js",["136","137","138"],"import React from \"react\";\r\nimport {List, message} from \"antd\";\r\n\r\nimport web3 from \"../utils/InitWeb3\";\r\nimport contractInstance from \"../utils/config\";\r\nimport MyNFTCard from \"../components/card/my-nft-card\";\r\nclass MyNFTTab extends React.Component{\r\n    state={\r\n        myNFTs: [],\r\n        myNFTNum: 0,\r\n        isConnected: false,\r\n        address: \"\",\r\n    }\r\n\r\n    async getNFTs(NFTIds){\r\n        let NFTs = [];\r\n        let i = 0;\r\n        for(; i < 10 && NFTIds[i] != 11; i++){\r\n            let NFT = await contractInstance.methods.NFTs(NFTIds[i]).call()\r\n            NFTs.push(NFT);\r\n            console.log(NFT);\r\n        }\r\n        this.setState({\r\n            myNFTs: NFTs,\r\n            myNFTNum: i,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts()\r\n        console.log(\"进来了\")\r\n        console.log(accounts[0])\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n            try{\r\n                // let NFTIds = await contractInstance.methods.getNFT().send({\r\n                //     from: accounts[0],\r\n                //     gas: 3000000,\r\n                // })\r\n                await contractInstance.methods.refreshAuction().send({\r\n                    from: accounts[0],\r\n                });\r\n                console.log(accounts[0])\r\n                let NFTIds = await contractInstance.methods.getNFT().call({\r\n                    from: accounts[0],\r\n                });\r\n                console.log(NFTIds)\r\n                await this.getNFTs(NFTIds);\r\n                console.log(this.state.myNFTs);\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n                if(e.code == 4001){\r\n                    message.info(\"钱包拒绝交易请求\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <List\r\n                    itemLayout=\"horizontal\"\r\n                    grid={{ gutter: 32, column: 2 }}\r\n                    dataSource={this.state.myNFTs}\r\n                    renderItem={(item) =>(\r\n                        <List.Item>\r\n                            <MyNFTCard NFT={item}></MyNFTCard>\r\n                        </List.Item>\r\n                    )}    \r\n                >\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyNFTTab;","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/tabs/my-auction.js",["139","140","141","142","143","144","145"],"import React from \"react\";\r\nimport { ReactDOM } from \"react\";\r\nimport {Button, Form, Input, List, Modal} from \"antd\";\r\n\r\nimport web3 from \"../utils/InitWeb3\";\r\nimport contractInstance from \"../utils/config\";\r\nimport MyAuctionCard from \"../components/card/my-auction-card\";\r\n\r\nclass MyAuctionTab extends React.Component{\r\n    state={\r\n        myAuctions: [],\r\n        myAuctionNum: 0,\r\n        isConnected: false,\r\n        address: \"\",\r\n    }\r\n\r\n    async getNFTs(NFTIds){\r\n        let NFTs = [];\r\n        console.log(NFTIds);\r\n        let i = 0;\r\n        for(; i < 10 && NFTIds[i] != 11; i++){\r\n            let NFT = await contractInstance.methods.NFTs(NFTIds[i]).call()\r\n            NFTs.push(NFT);\r\n            console.log(NFT);\r\n        }\r\n        this.setState({\r\n            myAuctions: NFTs,\r\n            myAuctionNum: i,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else {\r\n            await this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n            let NFTIds = await contractInstance.methods.getAuction().call({\r\n                from: accounts[0],\r\n            });\r\n            console.log(NFTIds);\r\n\r\n            await this.getNFTs(NFTIds);\r\n            console.log(this.state.myAuctions);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <List\r\n                    grid={{ gutter: 32, column: 2 }}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={this.state.myAuctions}\r\n                    renderItem={(item) =>(\r\n                        <List.Item>\r\n                            <MyAuctionCard NFT={item}/>\r\n                        </List.Item>\r\n                    )}    \r\n                >\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyAuctionTab;","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/tabs/my-bid.js",["146","147","148","149","150","151","152"],"import React from \"react\";\r\nimport { ReactDOM } from \"react\";\r\nimport {Button, Form, Input, List, Modal} from \"antd\";\r\n\r\nimport web3 from \"../utils/InitWeb3\";\r\nimport contractInstance from \"../utils/config\";\r\nimport MyBidCard from \"../components/card/my-bid-card\";\r\n\r\nclass MyBidTab extends React.Component{\r\n    state={\r\n        myBids: [],\r\n        myBidNum: 0,\r\n        isConnected: false,\r\n        address: \"\",\r\n    }\r\n\r\n    async getNFTs(NFTIds){\r\n        let NFTs = [];\r\n        let i = 0;\r\n        for(; i < 10 && NFTIds[i] != 11; i++){\r\n            let NFT = await contractInstance.methods.NFTs(NFTIds[i]).call()\r\n            NFTs.push(NFT);\r\n            console.log(NFT);\r\n        }\r\n        this.setState({\r\n            myBids: NFTs,\r\n            myBidNum: i,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else {\r\n            await this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n            // let tx = await contractInstance.methods.refreshAuction().send({\r\n            //     from: accounts[0],\r\n            //     gas: 3000000,\r\n            // });\r\n\r\n            let NFTIds = await contractInstance.methods.getBid().call({\r\n                from: accounts[0],\r\n            });\r\n            console.log(NFTIds);\r\n\r\n            await this.getNFTs(NFTIds);\r\n            console.log(this.state.myBids);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <List\r\n                    grid={{ gutter: 32, column: 2 }}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={this.state.myBids}\r\n                    renderItem={(item) =>(\r\n                        <List.Item>\r\n                            <MyBidCard NFT={item}/>\r\n                        </List.Item>\r\n                    )}    \r\n                >\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyBidTab;","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/card/my-nft-card.js",["153","154","155","156","157","158"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Tag, Image, Form, Layout, Button, Typography, Descriptions, List, PageHeader, Modal, InputNumber, message } from 'antd';\r\nimport contractInstance from '../../utils/config';\r\nimport web3 from '../../utils/InitWeb3';\r\n\r\n\r\nconst {Content} = Layout;\r\n\r\nclass MyNFTCard extends React.Component{\r\n    formRef = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            NFT: props.NFT,\r\n            isConnected: false,\r\n            address: \"\",\r\n            buttonDisable: false,\r\n            tagColor: \"blue\",\r\n            NFTState: \"私有\",\r\n            modalVisible: false,\r\n            owners: [],\r\n        })\r\n        \r\n\r\n        this.renderContent = this.renderContent.bind(this);\r\n        this.sell = this.sell.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        let accounts = await web3.eth.getAccounts()\r\n        if (accounts.length == 0) {\r\n            this.setState({\r\n                isConnected: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n            \r\n            let NFT = this.state.NFT;\r\n            if(NFT.onsale == false && NFT.setaside == false){\r\n                this.setState({\r\n                    NFTState: \"私有\",\r\n                    tagColor: \"blue\",\r\n                    buttonDisable: false,\r\n                })\r\n            }\r\n            else if(NFT.onsale == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖中\",\r\n                    tagColor: \"red\",\r\n                    buttonDisable: true,\r\n                })\r\n            }\r\n            else if(NFT.setaside == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖结束（等待申领）\",\r\n                    tagColor: \"green\",\r\n                    buttonDisable: true,\r\n                })\r\n            }\r\n\r\n            //获取流转信息\r\n            try{\r\n                let owners = [], ret;\r\n                for(let i = 0; i < NFT.ownerNum; i++){\r\n                    ret = await contractInstance.methods.owners(NFT.id, i).call();\r\n                    owners.push(ret);\r\n                }\r\n                console.log(owners);\r\n                this.setState({\r\n                    owners: owners,\r\n                })\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n    \r\n    renderContent = (column = 3) =>(\r\n        <Descriptions size=\"small\" column={column} bordered>\r\n            <Descriptions.Item label=\"名称\">{this.state.NFT.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"描述\">{this.state.NFT.description}</Descriptions.Item>\r\n            <Descriptions.Item label=\"价格\">{web3.utils.fromWei((this.state.NFT.startprice).toString(), \"ether\")} ether</Descriptions.Item>\r\n        </Descriptions>\r\n    );\r\n\r\n    renderOwners = () =>(\r\n        <List\r\n        header={<div>流转信息</div>}\r\n        bordered\r\n        dataSource={this.state.owners}\r\n        renderItem={item => (\r\n            <List.Item>\r\n                <Typography.Text mark>[ADDRESS]</Typography.Text> {item}\r\n            </List.Item>\r\n      )}\r\n        />\r\n    );\r\n\r\n    //售卖函数\r\n    async sell(){\r\n        let NFT = this.state.NFT;\r\n        let values = this.formRef.current.getFieldValue();\r\n        console.log(NFT.id, typeof(NFT.id));\r\n        console.log(values.price, typeof(values.price));\r\n        console.log(values.timespan, typeof(values.timespan));\r\n        console.log(this.state.address)\r\n        console.log(Number(NFT.id), typeof(Number(NFT.id)))\r\n        try{\r\n            let tx = await contractInstance.methods.sell(Number(NFT.id), web3.utils.toWei((values.price).toString(), \"ether\"), values.timespan).send({\r\n                from: this.state.address,\r\n                value: web3.utils.toWei('0.00000001', 'ether'),\r\n            })\r\n            message.success('拍卖提交成功');\r\n            window.location.reload();\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            message.error(\"拍卖提交失败\");\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{boxShadow: \"2px 2px 1px 2px #888\", margin: \"5px\"}}>\r\n                <PageHeader\r\n                    title={this.state.NFT.id}\r\n                    tags={<Tag color={this.state.tagColor}>{this.state.NFTState}</Tag>}\r\n                    extra={[\r\n                        <Button key=\"1\" type=\"primary\" disabled={this.state.buttonDisable} onClick={()=>this.setState({\r\n                            modalVisible: true,\r\n                        })}>\r\n                            拍卖\r\n                        </Button>\r\n                    ]}>\r\n                </PageHeader>\r\n                <Image width={200} height={200} src={this.state.NFT.uri} />\r\n                <Content>{this.renderContent()}</Content>\r\n                <Content>{this.renderOwners()}</Content>\r\n\r\n                <Modal\r\n                    visible={this.state.modalVisible}\r\n                    title=\"拍卖\"\r\n                    okText=\"提交\"\r\n                    cancelText=\"取消\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            modalVisible: false,\r\n                        })\r\n                    }}\r\n                    onOk={()=>{\r\n                        this.sell();\r\n                        this.formRef.current.resetFields();\r\n                    }}>\r\n                        <Form\r\n                            ref={this.formRef}\r\n                            layout=\"vertical\"\r\n                            name=\"sellForm\"\r\n                            initialValues={{modifier: 'public'}}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"price\"\r\n                                label=\"起拍价格\"\r\n                                rules={[{ required: true, message: '请填写起拍价格' }]}\r\n                            >\r\n                                <InputNumber min={1} max={10000000000}></InputNumber>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"timespan\"\r\n                                label=\"拍卖期限(单位：秒)\"\r\n                                rules={[{ required: true, message: '请填写拍卖期限(最长时间30天)' }]}\r\n                            >\r\n                                <InputNumber min={60} max={30*24*3600}></InputNumber>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyNFTCard;","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/card/my-auction-card.js",["159","160","161","162","163"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Tag, Image, Layout, Button, Descriptions, PageHeader, List, Typography, message } from 'antd';\r\nimport contractInstance from '../../utils/config';\r\nimport web3 from '../../utils/InitWeb3';\r\nimport { FileProtectOutlined } from '@ant-design/icons';\r\n\r\nconst {Content} = Layout;\r\n\r\nexport default class MyAuctionCard extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            NFT: props.NFT,\r\n            isConnected: false,\r\n            address: \"\",\r\n            buttonDisable: false,\r\n            tagColor: \"red\",\r\n            NFTState: \"正在拍卖\",\r\n            startPrice: 0,\r\n            modalVisible: true,\r\n            auctionowner: \"\",\r\n            owners: [],\r\n        })\r\n\r\n        this.renderContent = this.renderContent.bind(this);\r\n        this.approve = this.approve.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        let accounts = await web3.eth.getAccounts()\r\n        if (accounts.length == 0) {\r\n            this.setState({\r\n                isConnected: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n\r\n            let NFT = this.state.NFT;\r\n            \r\n            //设定拍卖状态\r\n            if(NFT.onsale == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖中\",\r\n                    tagColor: \"red\",\r\n                    buttonDisable: true,\r\n                })\r\n            }\r\n            else if(NFT.setaside == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖结束（等待申领）\",\r\n                    tagColor: \"green\",\r\n                    buttonDisable: false,\r\n                })\r\n            }\r\n\r\n            //得到拍卖信息\r\n            let ret = await contractInstance.methods.bidprices(NFT.id, 0).call();\r\n            console.log(ret);\r\n            this.setState({\r\n                startPrice: ret,\r\n            })\r\n\r\n            ret = await contractInstance.methods.ownerOf(NFT.id).call();\r\n            this.setState({\r\n                auctionowner: ret,\r\n            })\r\n\r\n            //获取流转信息\r\n            try{\r\n                let owners = [], ret;\r\n                for(let i = 0; i < NFT.ownerNum; i++){\r\n                    ret = await contractInstance.methods.owners(NFT.id, i).call();\r\n                    owners.push(ret);\r\n                }\r\n                console.log(owners);\r\n                this.setState({\r\n                    owners: owners,\r\n                })\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n    \r\n    renderContent = (column = 2) =>(\r\n        <Descriptions size=\"small\" column={column} bordered>\r\n            <Descriptions.Item label=\"名称\">{this.state.NFT.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"描述\">{this.state.NFT.description}</Descriptions.Item>\r\n            <Descriptions.Item label=\"起拍价格\">{web3.utils.fromWei((this.state.startPrice).toString(), \"ether\")} ether</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高价格\">{web3.utils.fromWei((this.state.NFT.currentprice).toString(), \"ether\")}  ether</Descriptions.Item>\r\n            <Descriptions.Item label=\"收藏品所有者\">{this.state.auctionowner}</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高出价者\">{this.state.NFT.currentowner}</Descriptions.Item>\r\n        </Descriptions>\r\n    );\r\n\r\n    renderOwners = () =>(\r\n        <List\r\n        header={<div>流转信息</div>}\r\n        bordered\r\n        dataSource={this.state.owners}\r\n        renderItem={item => (\r\n            <List.Item>\r\n                <Typography.Text mark>[ADDRESS]</Typography.Text> {item}\r\n            </List.Item>\r\n      )}\r\n        />\r\n    );\r\n\r\n    //卖方许可函数\r\n    async approve(){\r\n        let NFT = this.state.NFT;\r\n        console.log(NFT.id);\r\n        try{\r\n            let tx = await contractInstance.methods.sellerApprove(Number(NFT.id )).send({\r\n                from: this.state.address,\r\n                gas: 30000000,\r\n            })\r\n            message.success('卖方确认交易成功');\r\n            this.setstate({\r\n                buttonDisable: true,\r\n            });\r\n            window.location.reload();\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{boxShadow: \"2px 2px 1px 2px #888\", margin: \"5px\"}}>\r\n                <PageHeader\r\n                    title= {this.state.NFT.id}\r\n                    tags={<Tag color={this.state.tagColor}>{this.state.NFTState}</Tag>}\r\n                    extra={[\r\n                        <Button key=\"1\" type=\"primary\" disabled={this.state.buttonDisable} onClick={this.approve}>\r\n                            出售许可\r\n                        </Button>\r\n                    ]}>\r\n                </PageHeader>\r\n                <Image width={200} height={200} src={this.state.NFT.uri} />\r\n                <Content>{this.renderContent()}</Content>\r\n                <Content>{this.renderOwners()}</Content>\r\n            </div>\r\n        )\r\n    }\r\n}","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/card/my-bid-card.js",["164","165","166","167","168","169","170","171","172"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Tag, Image, Form, List, Typography, Layout, Button, Descriptions, PageHeader, Modal, InputNumber, message } from 'antd';\r\nimport contractInstance from '../../utils/config';\r\nimport web3 from '../../utils/InitWeb3';\r\nimport { FileProtectOutlined } from '@ant-design/icons';\r\n\r\nconst {Content} = Layout;\r\n\r\nexport default class MyBidCard extends React.Component{\r\n\r\n    formRef = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            NFT: props.NFT,\r\n            isConnected: false,\r\n            address: \"\",\r\n            bidButtonDisable: true,\r\n            claimButtonDisable: false,\r\n            tagColor: \"red\",\r\n            NFTState: \"正在拍卖\",\r\n            modalVisible: false,\r\n            startPrice: 0,\r\n            auctionowner: \"\",\r\n            owners: [],\r\n        })\r\n\r\n        this.renderContent = this.renderContent.bind(this);\r\n        this.claim = this.claim.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        let accounts = await web3.eth.getAccounts()\r\n        if (accounts.length == 0) {\r\n            this.setState({\r\n                isConnected: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n\r\n            let NFT = this.state.NFT;\r\n            console.log(NFT.currentprice)\r\n            if(NFT.onsale == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖中\",\r\n                    tagColor: \"red\",\r\n                    bidButtonDisable: false,\r\n                    claimButtonDisable: true,\r\n                })\r\n            }\r\n            else if(NFT.setaside == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖结束（等待申领）\",\r\n                    tagColor: \"green\",\r\n                    bidButtonDisable: true,\r\n                    claimButtonDisable: false,\r\n                })\r\n            }\r\n\r\n            let ret = await contractInstance.methods.bidprices(NFT.id, 0).call();\r\n            console.log(ret);\r\n            this.setState({\r\n                startPrice: ret,\r\n            })\r\n\r\n            ret = await contractInstance.methods.ownerOf(NFT.id).call();\r\n            this.setState({\r\n                auctionowner: ret,\r\n            })\r\n\r\n            //获取流转信息\r\n            try{\r\n                let owners = [], ret;\r\n                for(let i = 0; i < NFT.ownerNum; i++){\r\n                    ret = await contractInstance.methods.owners(NFT.id, i).call();\r\n                    owners.push(ret);\r\n                }\r\n                console.log(owners);\r\n                this.setState({\r\n                    owners: owners,\r\n                })\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n    \r\n    renderContent = (column = 2) =>(\r\n        <Descriptions size=\"small\" column={column} bordered>\r\n            <Descriptions.Item label=\"名称\">{this.state.NFT.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"描述\">{this.state.NFT.description}</Descriptions.Item>\r\n            <Descriptions.Item label=\"起拍价格\">{web3.utils.fromWei((this.state.startPrice).toString(), \"ether\")} ether</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高价格\">{web3.utils.fromWei((this.state.NFT.currentprice).toString(), \"ether\")}  ether</Descriptions.Item>\r\n            <Descriptions.Item label=\"收藏品所有者\">{this.state.auctionowner}</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高出价者\">{this.state.NFT.currentowner}</Descriptions.Item>\r\n        </Descriptions>\r\n    );\r\n\r\n    renderOwners = () =>(\r\n        <List\r\n        header={<div>流转信息</div>}\r\n        bordered\r\n        dataSource={this.state.owners}\r\n        renderItem={item => (\r\n            <List.Item>\r\n                <Typography.Text mark>[ADDRESS]</Typography.Text> {item}\r\n            </List.Item>\r\n      )}\r\n        />\r\n    );\r\n\r\n    //竞拍函数\r\n    async bid(){\r\n        let NFT = this.state.NFT;\r\n        let values = this.formRef.current.getFieldValue();\r\n\r\n        if(NFT.currentowner != this.state.address){\r\n            try{\r\n                let tx = contractInstance.methods.bid(Number(NFT.id), web3.utils.toWei((values.price).toString(), \"ether\")).send({\r\n                    from: this.state.address,\r\n                    value: web3.utils.toWei('0.00000001', 'ether'),\r\n                });\r\n                message.success('竞价成功');\r\n                window.location.reload();\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n                message.error(\"竞价失败\");\r\n            }\r\n        }\r\n        else{\r\n            message.info(\"您已经是出价最高的人了\")\r\n        }\r\n    }\r\n\r\n    async claim(){\r\n        let NFT = this.state.NFT;\r\n        if(NFT.currentowner == this.state.address){\r\n            try{\r\n                let tx = await contractInstance.methods.claim(Number(NFT.id)).send({\r\n                    from: this.state.address,\r\n                    value: NFT.currentprice,\r\n                })\r\n                message.success('认领成功');\r\n                window.location.reload();\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n                message.error(\"认领失败\");\r\n            }\r\n        }\r\n        else{\r\n            message.error(\"非竞拍成功者不可认领\");\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{boxShadow: \"2px 2px 1px 2px #888\", margin: \"5px\"}}>\r\n                <PageHeader\r\n                    title={this.state.NFT.id}\r\n                    tags={<Tag color={this.state.tagColor}>{this.state.NFTState}</Tag>}\r\n                    extra={[\r\n                        <Button key=\"1\" type=\"primary\" disabled={this.state.bidButtonDisable} onClick={()=>this.setState({\r\n                            modalVisible: true,\r\n                        })}>\r\n                            竞价\r\n                        </Button>\r\n                        \r\n                    ],\r\n                    [\r\n                        <Button key=\"2\" type=\"primary\" disabled={this.state.claimButtonDisable} onClick={this.claim}>\r\n                            认领\r\n                        </Button>\r\n                    ]}>\r\n                </PageHeader>\r\n                <Image width={200} height={200} src={this.state.NFT.uri} />\r\n                <Content>{this.renderContent()}</Content>\r\n                <Content>{this.renderOwners()}</Content>\r\n\r\n                <Modal\r\n                    visible={this.state.modalVisible}\r\n                    title=\"竞价\"\r\n                    okText=\"提交\"\r\n                    cancelText=\"取消\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            modalVisible: false,\r\n                        })\r\n                    }}\r\n                    onOk={()=>{\r\n                        this.bid();\r\n                        this.formRef.current.resetFields();\r\n                    }}>\r\n                        <Form\r\n                            ref={this.formRef}\r\n                            layout=\"vertical\"\r\n                            name=\"bidForm\"\r\n                            initialValues={{modifier: 'public'}}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"price\"\r\n                                label=\"出价\"\r\n                                rules={[{ required: true, message: '请填写您的出价' }]}\r\n                            >\r\n                                <InputNumber min={1} max={10000000000}></InputNumber>\r\n                            </Form.Item>\r\n\r\n                        </Form>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/StatusBar.js",["173","174","175","176","177","178"],"import React from 'react';\nimport 'antd/dist/antd.css';\nimport { PageHeader, Space} from 'antd';\nimport { AccountBookOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\nimport { HashRouter, Link } from 'react-router-dom';\nimport web3 from '../utils/InitWeb3';\n\nexport default class Status extends React.Component{\n    state = {\n        isConnected: false,\n        address: 'none',\n        balance: 'none'\n    }\n    \n    async componentDidMount(){\n        let accounts = await web3.eth.getAccounts();\n        let balance;\n        if(accounts.length != 0){\n            await web3.eth.getBalance(accounts[0]).then(\n                (wei) => {\n                    balance = web3.utils.fromWei(wei, 'ether')\n                }\n            )\n            console.log(balance); \n            this.setState({\n                isConnected: true,\n                address: accounts[0],\n                balance: balance\n            })\n        }\n    }\n\n    render(){\n        return(\n            <PageHeader>\n                <Space direction=\"horizontal\" size={50}>\n                    <text>当前登陆用户: {this.state.address}</text>\n                    <text>账户余额: {this.state.balance} eth</text>\n                </Space>\n            </PageHeader>      \n        )\n    }\n}",{"ruleId":"179","severity":1,"message":"180","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":11},{"ruleId":"183","severity":1,"message":"184","line":12,"column":5,"nodeType":"185","messageId":"186","endLine":14,"endColumn":6},{"ruleId":"187","severity":1,"message":"188","line":19,"column":17,"nodeType":"189","messageId":"190","endLine":19,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":7,"column":5,"nodeType":"185","messageId":"186","endLine":9,"endColumn":6},{"ruleId":"191","severity":1,"message":"192","line":22,"column":35,"nodeType":"193","messageId":"194","endLine":22,"endColumn":37},{"ruleId":"191","severity":1,"message":"195","line":35,"column":28,"nodeType":"193","messageId":"194","endLine":35,"endColumn":30},{"ruleId":"179","severity":1,"message":"196","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":16},{"ruleId":"179","severity":1,"message":"197","line":4,"column":19,"nodeType":"181","messageId":"182","endLine":4,"endColumn":23},{"ruleId":"179","severity":1,"message":"198","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":24},{"ruleId":"179","severity":1,"message":"199","line":5,"column":26,"nodeType":"181","messageId":"182","endLine":5,"endColumn":42},{"ruleId":"179","severity":1,"message":"200","line":5,"column":44,"nodeType":"181","messageId":"182","endLine":5,"endColumn":59},{"ruleId":"179","severity":1,"message":"201","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":20},{"ruleId":"179","severity":1,"message":"202","line":6,"column":22,"nodeType":"181","messageId":"182","endLine":6,"endColumn":26},{"ruleId":"183","severity":1,"message":"184","line":16,"column":5,"nodeType":"185","messageId":"186","endLine":18,"endColumn":6},{"ruleId":"191","severity":1,"message":"195","line":22,"column":28,"nodeType":"193","messageId":"194","endLine":22,"endColumn":30},{"ruleId":"183","severity":1,"message":"184","line":15,"column":5,"nodeType":"185","messageId":"186","endLine":17,"endColumn":6},{"ruleId":"179","severity":1,"message":"203","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":16},{"ruleId":"179","severity":1,"message":"204","line":7,"column":8,"nodeType":"181","messageId":"182","endLine":7,"endColumn":12},{"ruleId":"179","severity":1,"message":"205","line":21,"column":13,"nodeType":"181","messageId":"182","endLine":21,"endColumn":25},{"ruleId":"179","severity":1,"message":"206","line":3,"column":25,"nodeType":"181","messageId":"182","endLine":3,"endColumn":30},{"ruleId":"179","severity":1,"message":"200","line":4,"column":49,"nodeType":"181","messageId":"182","endLine":4,"endColumn":64},{"ruleId":"183","severity":1,"message":"184","line":9,"column":5,"nodeType":"185","messageId":"186","endLine":11,"endColumn":6},{"ruleId":"179","severity":1,"message":"207","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":29},{"ruleId":"191","severity":1,"message":"195","line":36,"column":29,"nodeType":"193","messageId":"194","endLine":36,"endColumn":31},{"ruleId":"191","severity":1,"message":"195","line":49,"column":27,"nodeType":"193","messageId":"194","endLine":49,"endColumn":29},{"ruleId":"191","severity":1,"message":"195","line":57,"column":34,"nodeType":"193","messageId":"194","endLine":57,"endColumn":36},{"ruleId":"191","severity":1,"message":"192","line":124,"column":29,"nodeType":"193","messageId":"194","endLine":124,"endColumn":31},{"ruleId":"179","severity":1,"message":"208","line":126,"column":21,"nodeType":"181","messageId":"182","endLine":126,"endColumn":23},{"ruleId":"179","severity":1,"message":"208","line":70,"column":13,"nodeType":"181","messageId":"182","endLine":70,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":18,"column":35,"nodeType":"193","messageId":"194","endLine":18,"endColumn":37},{"ruleId":"191","severity":1,"message":"195","line":33,"column":28,"nodeType":"193","messageId":"194","endLine":33,"endColumn":30},{"ruleId":"191","severity":1,"message":"195","line":61,"column":27,"nodeType":"193","messageId":"194","endLine":61,"endColumn":29},{"ruleId":"179","severity":1,"message":"203","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":18},{"ruleId":"179","severity":1,"message":"209","line":3,"column":9,"nodeType":"181","messageId":"182","endLine":3,"endColumn":15},{"ruleId":"179","severity":1,"message":"210","line":3,"column":17,"nodeType":"181","messageId":"182","endLine":3,"endColumn":21},{"ruleId":"179","severity":1,"message":"211","line":3,"column":23,"nodeType":"181","messageId":"182","endLine":3,"endColumn":28},{"ruleId":"179","severity":1,"message":"212","line":3,"column":36,"nodeType":"181","messageId":"182","endLine":3,"endColumn":41},{"ruleId":"191","severity":1,"message":"192","line":21,"column":35,"nodeType":"193","messageId":"194","endLine":21,"endColumn":37},{"ruleId":"191","severity":1,"message":"195","line":34,"column":28,"nodeType":"193","messageId":"194","endLine":34,"endColumn":30},{"ruleId":"179","severity":1,"message":"203","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":18},{"ruleId":"179","severity":1,"message":"209","line":3,"column":9,"nodeType":"181","messageId":"182","endLine":3,"endColumn":15},{"ruleId":"179","severity":1,"message":"210","line":3,"column":17,"nodeType":"181","messageId":"182","endLine":3,"endColumn":21},{"ruleId":"179","severity":1,"message":"211","line":3,"column":23,"nodeType":"181","messageId":"182","endLine":3,"endColumn":28},{"ruleId":"179","severity":1,"message":"212","line":3,"column":36,"nodeType":"181","messageId":"182","endLine":3,"endColumn":41},{"ruleId":"191","severity":1,"message":"192","line":20,"column":35,"nodeType":"193","messageId":"194","endLine":20,"endColumn":37},{"ruleId":"191","severity":1,"message":"195","line":33,"column":28,"nodeType":"193","messageId":"194","endLine":33,"endColumn":30},{"ruleId":"191","severity":1,"message":"195","line":34,"column":29,"nodeType":"193","messageId":"194","endLine":34,"endColumn":31},{"ruleId":"191","severity":1,"message":"195","line":46,"column":27,"nodeType":"193","messageId":"194","endLine":46,"endColumn":29},{"ruleId":"191","severity":1,"message":"195","line":46,"column":52,"nodeType":"193","messageId":"194","endLine":46,"endColumn":54},{"ruleId":"191","severity":1,"message":"195","line":53,"column":32,"nodeType":"193","messageId":"194","endLine":53,"endColumn":34},{"ruleId":"191","severity":1,"message":"195","line":60,"column":34,"nodeType":"193","messageId":"194","endLine":60,"endColumn":36},{"ruleId":"179","severity":1,"message":"208","line":117,"column":17,"nodeType":"181","messageId":"182","endLine":117,"endColumn":19},{"ruleId":"179","severity":1,"message":"207","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":29},{"ruleId":"191","severity":1,"message":"195","line":34,"column":29,"nodeType":"193","messageId":"194","endLine":34,"endColumn":31},{"ruleId":"191","severity":1,"message":"195","line":48,"column":27,"nodeType":"193","messageId":"194","endLine":48,"endColumn":29},{"ruleId":"191","severity":1,"message":"195","line":55,"column":34,"nodeType":"193","messageId":"194","endLine":55,"endColumn":36},{"ruleId":"179","severity":1,"message":"208","line":122,"column":17,"nodeType":"181","messageId":"182","endLine":122,"endColumn":19},{"ruleId":"179","severity":1,"message":"207","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":29},{"ruleId":"191","severity":1,"message":"195","line":37,"column":29,"nodeType":"193","messageId":"194","endLine":37,"endColumn":31},{"ruleId":"191","severity":1,"message":"195","line":50,"column":27,"nodeType":"193","messageId":"194","endLine":50,"endColumn":29},{"ruleId":"191","severity":1,"message":"195","line":58,"column":34,"nodeType":"193","messageId":"194","endLine":58,"endColumn":36},{"ruleId":"191","severity":1,"message":"192","line":125,"column":29,"nodeType":"193","messageId":"194","endLine":125,"endColumn":31},{"ruleId":"179","severity":1,"message":"208","line":127,"column":21,"nodeType":"181","messageId":"182","endLine":127,"endColumn":23},{"ruleId":"191","severity":1,"message":"195","line":146,"column":29,"nodeType":"193","messageId":"194","endLine":146,"endColumn":31},{"ruleId":"179","severity":1,"message":"208","line":148,"column":21,"nodeType":"181","messageId":"182","endLine":148,"endColumn":23},{"ruleId":"213","severity":1,"message":"214","line":178,"column":22,"nodeType":"215","messageId":"216","endLine":178,"endColumn":23},{"ruleId":"179","severity":1,"message":"217","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":29},{"ruleId":"179","severity":1,"message":"199","line":4,"column":31,"nodeType":"181","messageId":"182","endLine":4,"endColumn":47},{"ruleId":"179","severity":1,"message":"200","line":4,"column":49,"nodeType":"181","messageId":"182","endLine":4,"endColumn":64},{"ruleId":"179","severity":1,"message":"201","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":20},{"ruleId":"179","severity":1,"message":"202","line":5,"column":22,"nodeType":"181","messageId":"182","endLine":5,"endColumn":26},{"ruleId":"191","severity":1,"message":"192","line":18,"column":28,"nodeType":"193","messageId":"194","endLine":18,"endColumn":30},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-pascal-case","Imported JSX component Login_Menu must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Layout' is defined but never used.","'Menu' is defined but never used.","'GlobalOutlined' is defined but never used.","'AppstoreOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'HashRouter' is defined but never used.","'Link' is defined but never used.","'ReactDOM' is defined but never used.","'web3' is defined but never used.","'web3Provider' is assigned a value but never used.","'Space' is defined but never used.","'FileProtectOutlined' is defined but never used.","'tx' is assigned a value but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Modal' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'AccountBookOutlined' is defined but never used."]