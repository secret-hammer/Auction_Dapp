{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import ReactDOM from'react-dom';import{Layout,List}from\"antd\";import web3 from\"./utils/InitWeb3\";import contractInstance from\"./utils/config\";import MyMarketCard from\"./components/card/market-card\";import Header from\"./components/Header\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Content=Layout.Content,Footer=Layout.Footer;var Market=/*#__PURE__*/function(_React$Component){_inherits(Market,_React$Component);var _super=_createSuper(Market);function Market(){var _this;_classCallCheck(this,Market);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={NFTs:[],NFTNum:0,isConnected:false,address:\"\"};return _this;}_createClass(Market,[{key:\"getNFTs\",value:function(){var _getNFTs=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(NFTIds){var NFTs,i,NFT;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:NFTs=[];i=0;case 2:if(!(i<10&&NFTIds[i]!=11)){_context.next=11;break;}_context.next=5;return contractInstance.methods.NFTs(NFTIds[i]).call();case 5:NFT=_context.sent;NFTs.push(NFT);console.log(NFT);case 8:i++;_context.next=2;break;case 11:this.setState({NFTs:NFTs,NFTNum:i});case 12:case\"end\":return _context.stop();}}},_callee,this);}));function getNFTs(_x){return _getNFTs.apply(this,arguments);}return getNFTs;}()},{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var accounts,NFTIds;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return web3.eth.getAccounts();case 2:accounts=_context2.sent;if(!(accounts.length==0)){_context2.next=7;break;}this.setState({isConnected:false});_context2.next=16;break;case 7:_context2.next=9;return this.setState({isConnected:true,address:accounts[0]});case 9:_context2.next=11;return contractInstance.methods.getAllAuction().call();case 11:NFTIds=_context2.sent;console.log(NFTIds);_context2.next=15;return this.getNFTs(NFTIds);case 15:console.log(this.state.NFTs);case 16:case\"end\":return _context2.stop();}}},_callee2,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Content,{style:{padding:'0 50px'},children:/*#__PURE__*/_jsx(List,{grid:{gutter:32,column:2},itemLayout:\"horizontal\",dataSource:this.state.NFTs,renderItem:function renderItem(item){return/*#__PURE__*/_jsx(List.Item,{children:/*#__PURE__*/_jsx(MyMarketCard,{NFT:item})});}})}),/*#__PURE__*/_jsx(Footer,{style:{textAlign:'center'},children:\"Openbush \\xA92021 Created by spring\"})]});}}]);return Market;}(React.Component);export{Market as default};ReactDOM.render(/*#__PURE__*/_jsx(Market,{}),document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/Market.js"],"names":["React","ReactDOM","Layout","List","web3","contractInstance","MyMarketCard","Header","Content","Footer","Market","state","NFTs","NFTNum","isConnected","address","NFTIds","i","methods","call","NFT","push","console","log","setState","eth","getAccounts","accounts","length","getAllAuction","getNFTs","padding","gutter","column","item","textAlign","Component","render","document","getElementById"],"mappings":"qwBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAAQC,MAAR,CAAgBC,IAAhB,KAA2B,MAA3B,CAEA,MAAOC,CAAAA,IAAP,KAAiB,kBAAjB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,gBAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,C,wFAEA,GAAOC,CAAAA,OAAP,CAA0BN,MAA1B,CAAOM,OAAP,CAAgBC,MAAhB,CAA0BP,MAA1B,CAAgBO,MAAhB,C,GACqBC,CAAAA,M,uUACjBC,K,CAAM,CACFC,IAAI,CAAE,EADJ,CAEFC,MAAM,CAAE,CAFN,CAGFC,WAAW,CAAE,KAHX,CAIFC,OAAO,CAAE,EAJP,C,yIAON,iBAAcC,MAAd,iIACQJ,IADR,CACe,EADf,CAEQK,CAFR,CAEY,CAFZ,aAGUA,CAAC,CAAG,EAAJ,EAAUD,MAAM,CAACC,CAAD,CAAN,EAAa,EAHjC,iDAIwBZ,CAAAA,gBAAgB,CAACa,OAAjB,CAAyBN,IAAzB,CAA8BI,MAAM,CAACC,CAAD,CAApC,EAAyCE,IAAzC,EAJxB,QAIYC,GAJZ,eAKQR,IAAI,CAACS,IAAL,CAAUD,GAAV,EACAE,OAAO,CAACC,GAAR,CAAYH,GAAZ,EANR,OAGqCH,CAAC,EAHtC,+BAQI,KAAKO,QAAL,CAAc,CACVZ,IAAI,CAAEA,IADI,CAEVC,MAAM,CAAEI,CAFE,CAAd,EARJ,4D,4MAcA,mLACyBb,CAAAA,IAAI,CAACqB,GAAL,CAASC,WAAT,EADzB,QACQC,QADR,qBAEOA,QAAQ,CAACC,MAAT,EAAmB,CAF1B,2BAGQ,KAAKJ,QAAL,CAAc,CACVV,WAAW,CAAE,KADH,CAAd,EAHR,sDAQc,MAAKU,QAAL,CAAc,CAChBV,WAAW,CAAE,IADG,CAEhBC,OAAO,CAAEY,QAAQ,CAAC,CAAD,CAFD,CAAd,CARd,gCAa2BtB,CAAAA,gBAAgB,CAACa,OAAjB,CAAyBW,aAAzB,GAAyCV,IAAzC,EAb3B,SAaYH,MAbZ,gBAcQM,OAAO,CAACC,GAAR,CAAYP,MAAZ,EAdR,wBAgBc,MAAKc,OAAL,CAAad,MAAb,CAhBd,SAiBQM,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,IAAvB,EAjBR,8D,mIAqBA,iBAAQ,CACJ,mBACI,oCACI,KAAC,MAAD,IADJ,cAEI,KAAC,OAAD,EAAS,KAAK,CAAE,CAACmB,OAAO,CAAE,QAAV,CAAhB,uBACI,KAAC,IAAD,EACI,IAAI,CAAE,CAAEC,MAAM,CAAE,EAAV,CAAcC,MAAM,CAAE,CAAtB,CADV,CAEI,UAAU,CAAC,YAFf,CAGI,UAAU,CAAE,KAAKtB,KAAL,CAAWC,IAH3B,CAII,UAAU,CAAE,oBAACsB,IAAD,qBACR,KAAC,IAAD,CAAM,IAAN,wBACI,KAAC,YAAD,EAAc,GAAG,CAAEA,IAAnB,EADJ,EADQ,EAJhB,EADJ,EAFJ,cAeI,KAAC,MAAD,EAAQ,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAb,CAAf,iDAfJ,GADJ,CAmBH,C,oBA/D+BnC,KAAK,CAACoC,S,SAArB1B,M,aAmErBT,QAAQ,CAACoC,MAAT,cACI,KAAC,MAAD,IADJ,CAEIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport {Layout, List} from \"antd\";\r\n\r\nimport web3 from \"./utils/InitWeb3\";\r\nimport contractInstance from \"./utils/config\";\r\nimport MyMarketCard from \"./components/card/market-card\";\r\nimport Header from \"./components/Header\";\r\n\r\nconst {Content, Footer} = Layout;\r\nexport default class Market extends React.Component{\r\n    state={\r\n        NFTs: [],\r\n        NFTNum: 0,\r\n        isConnected: false,\r\n        address: \"\",\r\n    }\r\n\r\n    async getNFTs(NFTIds){\r\n        let NFTs = [];\r\n        let i = 0;\r\n        for(; i < 10 && NFTIds[i] != 11; i++){\r\n            let NFT = await contractInstance.methods.NFTs(NFTIds[i]).call()\r\n            NFTs.push(NFT);\r\n            console.log(NFT);\r\n        }\r\n        this.setState({\r\n            NFTs: NFTs,\r\n            NFTNum: i,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else {\r\n            await this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n\r\n            let NFTIds = await contractInstance.methods.getAllAuction().call();\r\n            console.log(NFTIds);\r\n\r\n            await this.getNFTs(NFTIds);\r\n            console.log(this.state.NFTs);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header />\r\n                <Content style={{padding: '0 50px'}}>\r\n                    <List\r\n                        grid={{ gutter: 32, column: 2 }}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={this.state.NFTs}\r\n                        renderItem={(item) =>(\r\n                            <List.Item>\r\n                                <MyMarketCard NFT={item}/>\r\n                            </List.Item>\r\n                        )}    \r\n                    >\r\n                    </List>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Openbush Â©2021 Created by spring</Footer>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nReactDOM.render(\r\n    <Market />,\r\n    document.getElementById(\"root\")\r\n)"]},"metadata":{},"sourceType":"module"}