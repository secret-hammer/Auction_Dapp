{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/card/my-nft-card.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Tag, Image, Form, Layout, Button, Descriptions, List, PageHeader, Modal, InputNumber, message } from 'antd';\nimport contractInstance from '../../utils/config';\nimport web3 from '../../utils/InitWeb3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Content\n} = Layout;\n\nclass MyNFTCard extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n    this.formRef = /*#__PURE__*/React.createRef();\n\n    this.renderContent = function () {\n      let column = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      return /*#__PURE__*/_jsxDEV(Descriptions, {\n        size: \"small\",\n        column: column,\n        children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"\\u540D\\u79F0\",\n          children: _this.state.NFT.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"\\u63CF\\u8FF0\",\n          children: _this.state.NFT.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"\\u4EF7\\u683C\",\n          children: _this.state.NFT.startprice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this);\n    };\n\n    this.renderOwners = () => /*#__PURE__*/_jsxDEV(List, {\n      header: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u6D41\\u8F6C\\u4FE1\\u606F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this),\n      bordered: true,\n      dataSource: this.state.owners,\n      renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Typography.Text, {\n          mark: true,\n          children: \"[ITEM]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), \" \", item]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this);\n\n    this.state = {\n      NFT: props.NFT,\n      isConnected: false,\n      address: \"\",\n      buttonDisable: false,\n      tagColor: \"blue\",\n      NFTState: \"私有\",\n      modalVisible: false,\n      owners: []\n    };\n    this.renderContent = this.renderContent.bind(this);\n    this.sell = this.sell.bind(this);\n  }\n\n  async componentDidMount() {\n    let accounts = await web3.eth.getAccounts();\n\n    if (accounts.length == 0) {\n      this.setState({\n        isConnected: false\n      });\n    } else {\n      this.setState({\n        isConnected: true,\n        address: accounts[0]\n      });\n      let NFT = this.state.NFT;\n\n      if (NFT.onsale == false && NFT.setaside == false) {\n        this.setState({\n          NFTState: \"私有\",\n          tagColor: \"blue\",\n          buttonDisable: false\n        });\n      } else if (NFT.onsale == true) {\n        this.setState({\n          NFTState: \"拍卖中\",\n          tagColor: \"red\",\n          buttonDisable: true\n        });\n      } else if (NFT.setaside == true) {\n        this.setState({\n          NFTState: \"拍卖结束（等待申领）\",\n          tagColor: \"green\",\n          buttonDisable: true\n        });\n      } //获取流转信息\n\n\n      try {\n        let owners = [],\n            ret;\n\n        for (let i = 0; i < NFT.ownerNum; i++) {\n          ret = await contractInstance.methods.owners(NFT.id, i).call();\n          owners.push(ret);\n        }\n\n        console.log(owners);\n        this.setState({\n          owners: owners\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  //售卖函数\n  async sell() {\n    let NFT = this.state.NFT;\n    let values = this.formRef.current.getFieldValue();\n    console.log(NFT.id, typeof NFT.id);\n    console.log(values.price, typeof values.price);\n    console.log(values.timespan, typeof values.timespan);\n    console.log(this.state.address);\n    console.log(Number(NFT.id), typeof Number(NFT.id));\n\n    try {\n      let tx = await contractInstance.methods.sell(Number(NFT.id), values.price, values.timespan).send({\n        from: this.state.address,\n        value: web3.utils.toWei('0.00000001', 'ether')\n      });\n      message.success('拍卖提交成功');\n      window.location.reload();\n    } catch (e) {\n      console.log(e);\n      message.error(\"拍卖提交失败\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        boxShadow: \"2px 2px 1px 2px #888\",\n        margin: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: this.state.NFT.id,\n        tags: /*#__PURE__*/_jsxDEV(Tag, {\n          color: this.state.tagColor,\n          children: this.state.NFTState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 27\n        }, this),\n        extra: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          disabled: this.state.buttonDisable,\n          onClick: () => this.setState({\n            modalVisible: true\n          }),\n          children: \"\\u62CD\\u5356\"\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 200,\n        height: 200,\n        src: this.state.NFT.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: this.renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: this.renderOwners\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: this.state.modalVisible,\n        title: \"\\u62CD\\u5356\",\n        okText: \"\\u63D0\\u4EA4\",\n        cancelText: \"\\u53D6\\u6D88\",\n        onCancel: () => {\n          this.setState({\n            modalVisible: false\n          });\n        },\n        onOk: () => {\n          this.sell();\n          this.formRef.current.resetFields();\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          ref: this.formRef,\n          layout: \"vertical\",\n          name: \"sellForm\",\n          initialValues: {\n            modifier: 'public'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"price\",\n            label: \"\\u8D77\\u62CD\\u4EF7\\u683C\",\n            rules: [{\n              required: true,\n              message: '请填写起拍价格'\n            }],\n            children: /*#__PURE__*/_jsxDEV(InputNumber, {\n              min: 1,\n              max: 10000000000\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"timespan\",\n            label: \"\\u62CD\\u5356\\u671F\\u9650(\\u5355\\u4F4D\\uFF1A\\u79D2)\",\n            rules: [{\n              required: true,\n              message: '请填写拍卖期限(最长时间30天)'\n            }],\n            children: /*#__PURE__*/_jsxDEV(InputNumber, {\n              min: 60,\n              max: 30 * 24 * 3600\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyNFTCard;","map":{"version":3,"sources":["/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/card/my-nft-card.js"],"names":["React","Tag","Image","Form","Layout","Button","Descriptions","List","PageHeader","Modal","InputNumber","message","contractInstance","web3","Content","MyNFTCard","Component","constructor","props","formRef","createRef","renderContent","column","state","NFT","name","description","startprice","renderOwners","owners","item","isConnected","address","buttonDisable","tagColor","NFTState","modalVisible","bind","sell","componentDidMount","accounts","eth","getAccounts","length","setState","onsale","setaside","ret","i","ownerNum","methods","id","call","push","console","log","e","values","current","getFieldValue","price","timespan","Number","tx","send","from","value","utils","toWei","success","window","location","reload","error","render","boxShadow","margin","uri","resetFields","modifier","required"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Tag, Image, Form, Layout, Button, Descriptions, List, PageHeader, Modal, InputNumber, message } from 'antd';\r\nimport contractInstance from '../../utils/config';\r\nimport web3 from '../../utils/InitWeb3';\r\n\r\n\r\nconst {Content} = Layout;\r\n\r\nclass MyNFTCard extends React.Component{\r\n    formRef = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            NFT: props.NFT,\r\n            isConnected: false,\r\n            address: \"\",\r\n            buttonDisable: false,\r\n            tagColor: \"blue\",\r\n            NFTState: \"私有\",\r\n            modalVisible: false,\r\n            owners: [],\r\n        })\r\n        \r\n\r\n        this.renderContent = this.renderContent.bind(this);\r\n        this.sell = this.sell.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        let accounts = await web3.eth.getAccounts()\r\n        if (accounts.length == 0) {\r\n            this.setState({\r\n                isConnected: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n\r\n            let NFT = this.state.NFT;\r\n            if(NFT.onsale == false && NFT.setaside == false){\r\n                this.setState({\r\n                    NFTState: \"私有\",\r\n                    tagColor: \"blue\",\r\n                    buttonDisable: false,\r\n                })\r\n            }\r\n            else if(NFT.onsale == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖中\",\r\n                    tagColor: \"red\",\r\n                    buttonDisable: true,\r\n                })\r\n            }\r\n            else if(NFT.setaside == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖结束（等待申领）\",\r\n                    tagColor: \"green\",\r\n                    buttonDisable: true,\r\n                })\r\n            }\r\n\r\n            //获取流转信息\r\n            try{\r\n                let owners = [], ret;\r\n                for(let i = 0; i < NFT.ownerNum; i++){\r\n                    ret = await contractInstance.methods.owners(NFT.id, i).call();\r\n                    owners.push(ret);\r\n                }\r\n                console.log(owners);\r\n                this.setState({\r\n                    owners: owners,\r\n                })\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n    \r\n    renderContent = (column = 2) =>(\r\n        <Descriptions size=\"small\" column={column}>\r\n            <Descriptions.Item label=\"名称\">{this.state.NFT.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"描述\">{this.state.NFT.description}</Descriptions.Item>\r\n            <Descriptions.Item label=\"价格\">{this.state.NFT.startprice}</Descriptions.Item>\r\n        </Descriptions>\r\n    );\r\n\r\n    renderOwners = () =>(\r\n        <List\r\n        header={<div>流转信息</div>}\r\n        bordered\r\n        dataSource={this.state.owners}\r\n        renderItem={item => (\r\n            <List.Item>\r\n                <Typography.Text mark>[ITEM]</Typography.Text> {item}\r\n            </List.Item>\r\n      )}\r\n    />\r\n    );\r\n\r\n    //售卖函数\r\n    async sell(){\r\n        let NFT = this.state.NFT;\r\n        let values = this.formRef.current.getFieldValue();\r\n        console.log(NFT.id, typeof(NFT.id));\r\n        console.log(values.price, typeof(values.price));\r\n        console.log(values.timespan, typeof(values.timespan));\r\n        console.log(this.state.address)\r\n        console.log(Number(NFT.id), typeof(Number(NFT.id)))\r\n        try{\r\n            let tx = await contractInstance.methods.sell(Number(NFT.id), values.price, values.timespan).send({\r\n                from: this.state.address,\r\n                value: web3.utils.toWei('0.00000001', 'ether'),\r\n            })\r\n            message.success('拍卖提交成功');\r\n            window.location.reload();\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            message.error(\"拍卖提交失败\");\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{boxShadow: \"2px 2px 1px 2px #888\", margin: \"5px\"}}>\r\n                <PageHeader\r\n                    title={this.state.NFT.id}\r\n                    tags={<Tag color={this.state.tagColor}>{this.state.NFTState}</Tag>}\r\n                    extra={[\r\n                        <Button key=\"1\" type=\"primary\" disabled={this.state.buttonDisable} onClick={()=>this.setState({\r\n                            modalVisible: true,\r\n                        })}>\r\n                            拍卖\r\n                        </Button>\r\n                    ]}>\r\n                </PageHeader>\r\n                <Image width={200} height={200} src={this.state.NFT.uri} />\r\n                <Content>{this.renderContent()}</Content>\r\n                <Content>{this.renderOwners}</Content>\r\n\r\n                <Modal\r\n                    visible={this.state.modalVisible}\r\n                    title=\"拍卖\"\r\n                    okText=\"提交\"\r\n                    cancelText=\"取消\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            modalVisible: false,\r\n                        })\r\n                    }}\r\n                    onOk={()=>{\r\n                        this.sell();\r\n                        this.formRef.current.resetFields();\r\n                    }}>\r\n                        <Form\r\n                            ref={this.formRef}\r\n                            layout=\"vertical\"\r\n                            name=\"sellForm\"\r\n                            initialValues={{modifier: 'public'}}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"price\"\r\n                                label=\"起拍价格\"\r\n                                rules={[{ required: true, message: '请填写起拍价格' }]}\r\n                            >\r\n                                <InputNumber min={1} max={10000000000}></InputNumber>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"timespan\"\r\n                                label=\"拍卖期限(单位：秒)\"\r\n                                rules={[{ required: true, message: '请填写拍卖期限(最长时间30天)' }]}\r\n                            >\r\n                                <InputNumber min={60} max={30*24*3600}></InputNumber>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyNFTCard;"]},"metadata":{},"sourceType":"module"}