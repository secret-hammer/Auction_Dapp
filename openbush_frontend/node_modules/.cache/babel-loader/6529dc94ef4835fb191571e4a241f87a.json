{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/tabs/my-bid.js\";\nimport React from \"react\";\nimport { ReactDOM } from \"react\";\nimport { Button, Form, Input, List, Modal } from \"antd\";\nimport web3 from \"../utils/InitWeb3\";\nimport contractInstance from \"../utils/config\";\nimport MyBidCard from \"../components/card/my-bid-card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyBidTab extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      myBids: [],\n      myBidNum: 0,\n      isConnected: false,\n      address: \"\"\n    };\n  }\n\n  async getNFTs(NFTIds) {\n    let NFTs = [];\n    let i = 0;\n\n    for (; i < 10 && NFTIds[i] != 11; i++) {\n      let NFT = await contractInstance.methods.NFTs(NFTIds[i]).call();\n      NFTs.push(NFT);\n      console.log(NFT);\n    }\n\n    this.setState({\n      myBids: NFTs,\n      myBidNum: i\n    });\n  }\n\n  async componentDidMount() {\n    let accounts = await web3.eth.getAccounts();\n\n    if (accounts.length == 0) {\n      this.setState({\n        isConnected: false\n      });\n    } else {\n      await this.setState({\n        isConnected: true,\n        address: accounts[0]\n      }); // let tx = await contractInstance.methods.refreshAuction().send({\n      //     from: accounts[0],\n      //     gas: 3000000,\n      // });\n\n      let NFTIds = await contractInstance.methods.getBid().call({\n        from: accounts[0]\n      });\n      console.log(NFTIds);\n      await this.getNFTs(NFTIds);\n      console.log(this.state.myBids);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        grid: {\n          gutter: 32,\n          column: 2\n        },\n        itemLayout: \"horizontal\",\n        dataSource: this.state.myBids,\n        renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n          children: /*#__PURE__*/_jsxDEV(MyBidCard, {\n            NFT: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyBidTab;","map":{"version":3,"sources":["/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/tabs/my-bid.js"],"names":["React","ReactDOM","Button","Form","Input","List","Modal","web3","contractInstance","MyBidCard","MyBidTab","Component","state","myBids","myBidNum","isConnected","address","getNFTs","NFTIds","NFTs","i","NFT","methods","call","push","console","log","setState","componentDidMount","accounts","eth","getAccounts","length","getBid","from","render","gutter","column","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,IAA7B,EAAmCC,KAAnC,QAA+C,MAA/C;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,gBAAP,MAA6B,iBAA7B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;;;AAEA,MAAMC,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC5B;AACFC,MAAAA,MAAM,EAAE,EADN;AAEFC,MAAAA,QAAQ,EAAE,CAFR;AAGFC,MAAAA,WAAW,EAAE,KAHX;AAIFC,MAAAA,OAAO,EAAE;AAJP,KAD4B;AAAA;;AAQrB,QAAPC,OAAO,CAACC,MAAD,EAAQ;AACjB,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,CAAC,GAAG,CAAR;;AACA,WAAMA,CAAC,GAAG,EAAJ,IAAUF,MAAM,CAACE,CAAD,CAAN,IAAa,EAA7B,EAAiCA,CAAC,EAAlC,EAAqC;AACjC,UAAIC,GAAG,GAAG,MAAMb,gBAAgB,CAACc,OAAjB,CAAyBH,IAAzB,CAA8BD,MAAM,CAACE,CAAD,CAApC,EAAyCG,IAAzC,EAAhB;AACAJ,MAAAA,IAAI,CAACK,IAAL,CAAUH,GAAV;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACH;;AACD,SAAKM,QAAL,CAAc;AACVd,MAAAA,MAAM,EAAEM,IADE;AAEVL,MAAAA,QAAQ,EAAEM;AAFA,KAAd;AAIH;;AAEsB,QAAjBQ,iBAAiB,GAAE;AACrB,QAAIC,QAAQ,GAAG,MAAMtB,IAAI,CAACuB,GAAL,CAASC,WAAT,EAArB;;AACA,QAAGF,QAAQ,CAACG,MAAT,IAAmB,CAAtB,EAAwB;AACpB,WAAKL,QAAL,CAAc;AACVZ,QAAAA,WAAW,EAAE;AADH,OAAd;AAGH,KAJD,MAKK;AACD,YAAM,KAAKY,QAAL,CAAc;AAChBZ,QAAAA,WAAW,EAAE,IADG;AAEhBC,QAAAA,OAAO,EAAEa,QAAQ,CAAC,CAAD;AAFD,OAAd,CAAN,CADC,CAKD;AACA;AACA;AACA;;AAEA,UAAIX,MAAM,GAAG,MAAMV,gBAAgB,CAACc,OAAjB,CAAyBW,MAAzB,GAAkCV,IAAlC,CAAuC;AACtDW,QAAAA,IAAI,EAAEL,QAAQ,CAAC,CAAD;AADwC,OAAvC,CAAnB;AAGAJ,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AAEA,YAAM,KAAKD,OAAL,CAAaC,MAAb,CAAN;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,MAAvB;AACH;AACJ;;AAEDsB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,IAAI,EAAE;AAAEC,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,MAAM,EAAE;AAAtB,SADV;AAEI,QAAA,UAAU,EAAC,YAFf;AAGI,QAAA,UAAU,EAAE,KAAKzB,KAAL,CAAWC,MAH3B;AAII,QAAA,UAAU,EAAGyB,IAAD,iBACR,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,GAAG,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAjEiC;;AAqEtC,eAAe5B,QAAf","sourcesContent":["import React from \"react\";\r\nimport { ReactDOM } from \"react\";\r\nimport {Button, Form, Input, List, Modal} from \"antd\";\r\n\r\nimport web3 from \"../utils/InitWeb3\";\r\nimport contractInstance from \"../utils/config\";\r\nimport MyBidCard from \"../components/card/my-bid-card\";\r\n\r\nclass MyBidTab extends React.Component{\r\n    state={\r\n        myBids: [],\r\n        myBidNum: 0,\r\n        isConnected: false,\r\n        address: \"\",\r\n    }\r\n\r\n    async getNFTs(NFTIds){\r\n        let NFTs = [];\r\n        let i = 0;\r\n        for(; i < 10 && NFTIds[i] != 11; i++){\r\n            let NFT = await contractInstance.methods.NFTs(NFTIds[i]).call()\r\n            NFTs.push(NFT);\r\n            console.log(NFT);\r\n        }\r\n        this.setState({\r\n            myBids: NFTs,\r\n            myBidNum: i,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else {\r\n            await this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n            // let tx = await contractInstance.methods.refreshAuction().send({\r\n            //     from: accounts[0],\r\n            //     gas: 3000000,\r\n            // });\r\n\r\n            let NFTIds = await contractInstance.methods.getBid().call({\r\n                from: accounts[0],\r\n            });\r\n            console.log(NFTIds);\r\n\r\n            await this.getNFTs(NFTIds);\r\n            console.log(this.state.myBids);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <List\r\n                    grid={{ gutter: 32, column: 2 }}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={this.state.myBids}\r\n                    renderItem={(item) =>(\r\n                        <List.Item>\r\n                            <MyBidCard NFT={item}/>\r\n                        </List.Item>\r\n                    )}    \r\n                >\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyBidTab;"]},"metadata":{},"sourceType":"module"}