{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{List,message}from\"antd\";import web3 from\"../utils/InitWeb3\";import contractInstance from\"../utils/config\";import MyNFTCard from\"../components/card/my-nft-card\";import{jsx as _jsx}from\"react/jsx-runtime\";var MyNFTTab=/*#__PURE__*/function(_React$Component){_inherits(MyNFTTab,_React$Component);var _super=_createSuper(MyNFTTab);function MyNFTTab(){var _this;_classCallCheck(this,MyNFTTab);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={myNFTs:[],myNFTNum:0,isConnected:false,address:\"\"};return _this;}_createClass(MyNFTTab,[{key:\"getNFTs\",value:function(){var _getNFTs=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(NFTIds){var NFTs,i,NFT;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:NFTs=[];i=0;case 2:if(!(i<10&&NFTIds[i]!=11)){_context.next=11;break;}_context.next=5;return contractInstance.methods.NFTs(NFTIds[i]).call();case 5:NFT=_context.sent;NFTs.push(NFT);console.log(NFT);case 8:i++;_context.next=2;break;case 11:this.setState({myNFTs:NFTs,myNFTNum:i});case 12:case\"end\":return _context.stop();}}},_callee,this);}));function getNFTs(_x){return _getNFTs.apply(this,arguments);}return getNFTs;}()},{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var accounts,NFTIds;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return web3.eth.getAccounts();case 2:accounts=_context2.sent;console.log(\"进来了\");console.log(accounts[0]);if(!(accounts.length==0)){_context2.next=9;break;}this.setState({isConnected:false});_context2.next=27;break;case 9:this.setState({isConnected:true,address:accounts[0]});_context2.prev=10;_context2.next=13;return contractInstance.methods.refreshAuction().send({from:accounts[0]});case 13:console.log(accounts[0]);_context2.next=16;return contractInstance.methods.getNFT().call({from:accounts[0]});case 16:NFTIds=_context2.sent;console.log(NFTIds);_context2.next=20;return this.getNFTs(NFTIds);case 20:console.log(this.state.myNFTs);_context2.next=27;break;case 23:_context2.prev=23;_context2.t0=_context2[\"catch\"](10);console.log(_context2.t0);if(_context2.t0.code==4001){message.info(\"钱包拒绝交易请求\");}case 27:case\"end\":return _context2.stop();}}},_callee2,this,[[10,23]]);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(List,{itemLayout:\"horizontal\",grid:{gutter:32,column:2},dataSource:this.state.myNFTs,renderItem:function renderItem(item){return/*#__PURE__*/_jsx(List.Item,{children:/*#__PURE__*/_jsx(MyNFTCard,{NFT:item})});}})});}}]);return MyNFTTab;}(React.Component);export default MyNFTTab;","map":{"version":3,"sources":["/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/tabs/my-nft.js"],"names":["React","List","message","web3","contractInstance","MyNFTCard","MyNFTTab","state","myNFTs","myNFTNum","isConnected","address","NFTIds","NFTs","i","methods","call","NFT","push","console","log","setState","eth","getAccounts","accounts","length","refreshAuction","send","from","getNFT","getNFTs","code","info","gutter","column","item","Component"],"mappings":"qwBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,IAAR,CAAcC,OAAd,KAA4B,MAA5B,CAEA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,iBAA7B,CACA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,C,8CACMC,CAAAA,Q,+UACFC,K,CAAM,CACFC,MAAM,CAAE,EADN,CAEFC,QAAQ,CAAE,CAFR,CAGFC,WAAW,CAAE,KAHX,CAIFC,OAAO,CAAE,EAJP,C,2IAON,iBAAcC,MAAd,iIACQC,IADR,CACe,EADf,CAEQC,CAFR,CAEY,CAFZ,aAGUA,CAAC,CAAG,EAAJ,EAAUF,MAAM,CAACE,CAAD,CAAN,EAAa,EAHjC,iDAIwBV,CAAAA,gBAAgB,CAACW,OAAjB,CAAyBF,IAAzB,CAA8BD,MAAM,CAACE,CAAD,CAApC,EAAyCE,IAAzC,EAJxB,QAIYC,GAJZ,eAKQJ,IAAI,CAACK,IAAL,CAAUD,GAAV,EACAE,OAAO,CAACC,GAAR,CAAYH,GAAZ,EANR,OAGqCH,CAAC,EAHtC,+BAQI,KAAKO,QAAL,CAAc,CACVb,MAAM,CAAEK,IADE,CAEVJ,QAAQ,CAAEK,CAFA,CAAd,EARJ,4D,4MAcA,mLACyBX,CAAAA,IAAI,CAACmB,GAAL,CAASC,WAAT,EADzB,QACQC,QADR,gBAEIL,OAAO,CAACC,GAAR,CAAY,KAAZ,EACAD,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAAC,CAAD,CAApB,EAHJ,KAIOA,QAAQ,CAACC,MAAT,EAAmB,CAJ1B,2BAKQ,KAAKJ,QAAL,CAAc,CACVX,WAAW,CAAE,KADH,CAAd,EALR,+BAUQ,KAAKW,QAAL,CAAc,CACVX,WAAW,CAAE,IADH,CAEVC,OAAO,CAAEa,QAAQ,CAAC,CAAD,CAFP,CAAd,EAVR,0CAmBkBpB,CAAAA,gBAAgB,CAACW,OAAjB,CAAyBW,cAAzB,GAA0CC,IAA1C,CAA+C,CACjDC,IAAI,CAAEJ,QAAQ,CAAC,CAAD,CADmC,CAA/C,CAnBlB,SAsBYL,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAAC,CAAD,CAApB,EAtBZ,wBAuB+BpB,CAAAA,gBAAgB,CAACW,OAAjB,CAAyBc,MAAzB,GAAkCb,IAAlC,CAAuC,CACtDY,IAAI,CAAEJ,QAAQ,CAAC,CAAD,CADwC,CAAvC,CAvB/B,SAuBgBZ,MAvBhB,gBA0BYO,OAAO,CAACC,GAAR,CAAYR,MAAZ,EA1BZ,wBA2BkB,MAAKkB,OAAL,CAAalB,MAAb,CA3BlB,SA4BYO,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,MAAvB,EA5BZ,sFA+BYW,OAAO,CAACC,GAAR,eACA,GAAG,aAAEW,IAAF,EAAU,IAAb,CAAkB,CACd7B,OAAO,CAAC8B,IAAR,CAAa,UAAb,EACH,CAlCb,wE,mIAuCA,iBAAQ,CACJ,mBACI,kCACI,KAAC,IAAD,EACI,UAAU,CAAC,YADf,CAEI,IAAI,CAAE,CAAEC,MAAM,CAAE,EAAV,CAAcC,MAAM,CAAE,CAAtB,CAFV,CAGI,UAAU,CAAE,KAAK3B,KAAL,CAAWC,MAH3B,CAII,UAAU,CAAE,oBAAC2B,IAAD,qBACR,KAAC,IAAD,CAAM,IAAN,wBACI,KAAC,SAAD,EAAW,GAAG,CAAEA,IAAhB,EADJ,EADQ,EAJhB,EADJ,EADJ,CAeH,C,sBA7EkBnC,KAAK,CAACoC,S,EAiF7B,cAAe9B,CAAAA,QAAf","sourcesContent":["import React from \"react\";\r\nimport {List, message} from \"antd\";\r\n\r\nimport web3 from \"../utils/InitWeb3\";\r\nimport contractInstance from \"../utils/config\";\r\nimport MyNFTCard from \"../components/card/my-nft-card\";\r\nclass MyNFTTab extends React.Component{\r\n    state={\r\n        myNFTs: [],\r\n        myNFTNum: 0,\r\n        isConnected: false,\r\n        address: \"\",\r\n    }\r\n\r\n    async getNFTs(NFTIds){\r\n        let NFTs = [];\r\n        let i = 0;\r\n        for(; i < 10 && NFTIds[i] != 11; i++){\r\n            let NFT = await contractInstance.methods.NFTs(NFTIds[i]).call()\r\n            NFTs.push(NFT);\r\n            console.log(NFT);\r\n        }\r\n        this.setState({\r\n            myNFTs: NFTs,\r\n            myNFTNum: i,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts()\r\n        console.log(\"进来了\")\r\n        console.log(accounts[0])\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n            try{\r\n                // let NFTIds = await contractInstance.methods.getNFT().send({\r\n                //     from: accounts[0],\r\n                //     gas: 3000000,\r\n                // })\r\n                await contractInstance.methods.refreshAuction().send({\r\n                    from: accounts[0],\r\n                });\r\n                console.log(accounts[0])\r\n                let NFTIds = await contractInstance.methods.getNFT().call({\r\n                    from: accounts[0],\r\n                });\r\n                console.log(NFTIds)\r\n                await this.getNFTs(NFTIds);\r\n                console.log(this.state.myNFTs);\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n                if(e.code == 4001){\r\n                    message.info(\"钱包拒绝交易请求\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <List\r\n                    itemLayout=\"horizontal\"\r\n                    grid={{ gutter: 32, column: 2 }}\r\n                    dataSource={this.state.myNFTs}\r\n                    renderItem={(item) =>(\r\n                        <List.Item>\r\n                            <MyNFTCard NFT={item}></MyNFTCard>\r\n                        </List.Item>\r\n                    )}    \r\n                >\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyNFTTab;"]},"metadata":{},"sourceType":"module"}