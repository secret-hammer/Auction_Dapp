{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/Market.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Layout, List } from \"antd\";\nimport web3 from \"./utils/InitWeb3\";\nimport contractInstance from \"./utils/config\";\nimport MyMarketCard from \"./components/card/market-card\";\nimport Header from \"./components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Content\n} = Layout;\nexport default class Market extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      NFTs: [],\n      NFTNum: 0,\n      isConnected: false,\n      address: \"\"\n    };\n  }\n\n  async getNFTs(NFTIds) {\n    let NFTs = [];\n    let i = 0;\n\n    for (; i < 10 && NFTIds[i] != 11; i++) {\n      let NFT = await contractInstance.methods.NFTs(i).call();\n      NFTs.push(NFT);\n      console.log(NFT);\n    }\n\n    this.setState({\n      NFTs: NFTs,\n      NFTNum: i\n    });\n  }\n\n  async componentDidMount() {\n    let accounts = await web3.eth.getAccounts();\n\n    if (accounts.length == 0) {\n      this.setState({\n        isConnected: false\n      });\n    } else {\n      await this.setState({\n        isConnected: true,\n        address: accounts[0]\n      });\n      let NFTIds = await contractInstance.methods.getAllAuction().call();\n      console.log(NFTIds);\n      await this.getNFTs(NFTIds);\n      console.log(this.state.NFTs);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        style: {\n          padding: '0 50px'\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          itemLayout: \"horizontal\",\n          dataSource: this.state.NFTs,\n          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n            children: /*#__PURE__*/_jsxDEV(MyMarketCard, {\n              NFT: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nReactDOM.render( /*#__PURE__*/_jsxDEV(Market, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 77,\n  columnNumber: 5\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/Market.js"],"names":["React","ReactDOM","Layout","List","web3","contractInstance","MyMarketCard","Header","Content","Market","Component","state","NFTs","NFTNum","isConnected","address","getNFTs","NFTIds","i","NFT","methods","call","push","console","log","setState","componentDidMount","accounts","eth","getAccounts","length","getAllAuction","render","padding","item","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport {Layout, List} from \"antd\";\r\n\r\nimport web3 from \"./utils/InitWeb3\";\r\nimport contractInstance from \"./utils/config\";\r\nimport MyMarketCard from \"./components/card/market-card\";\r\nimport Header from \"./components/Header\";\r\n\r\nconst {Content} = Layout;\r\nexport default class Market extends React.Component{\r\n    state={\r\n        NFTs: [],\r\n        NFTNum: 0,\r\n        isConnected: false,\r\n        address: \"\",\r\n    }\r\n\r\n    async getNFTs(NFTIds){\r\n        let NFTs = [];\r\n        let i = 0;\r\n        for(; i < 10 && NFTIds[i] != 11; i++){\r\n            let NFT = await contractInstance.methods.NFTs(i).call()\r\n            NFTs.push(NFT);\r\n            console.log(NFT);\r\n        }\r\n        this.setState({\r\n            NFTs: NFTs,\r\n            NFTNum: i,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else {\r\n            await this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n\r\n            let NFTIds = await contractInstance.methods.getAllAuction().call();\r\n            console.log(NFTIds);\r\n\r\n            await this.getNFTs(NFTIds);\r\n            console.log(this.state.NFTs);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header />\r\n                <Content style={{padding: '0 50px'}}>\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={this.state.NFTs}\r\n                        renderItem={(item) =>(\r\n                            <List.Item>\r\n                                <MyMarketCard NFT={item}/>\r\n                            </List.Item>\r\n                        )}    \r\n                    >\r\n                    </List>\r\n                </Content>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nReactDOM.render(\r\n    <Market />,\r\n    document.getElementById(\"root\")\r\n)"]},"metadata":{},"sourceType":"module"}