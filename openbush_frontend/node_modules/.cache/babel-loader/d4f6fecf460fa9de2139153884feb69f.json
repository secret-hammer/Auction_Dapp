{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/card/my-bid-card.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Tag, Image, Form, List, Typography, Layout, Button, Descriptions, PageHeader, Modal, InputNumber, message } from 'antd';\nimport contractInstance from '../../utils/config';\nimport web3 from '../../utils/InitWeb3';\nimport { FileProtectOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Content\n} = Layout;\nexport default class MyBidCard extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n    this.formRef = /*#__PURE__*/React.createRef();\n\n    this.renderContent = function () {\n      let column = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      return /*#__PURE__*/_jsxDEV(Descriptions, {\n        size: \"small\",\n        column: column,\n        bordered: true,\n        children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"\\u540D\\u79F0\",\n          children: _this.state.NFT.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"\\u63CF\\u8FF0\",\n          children: _this.state.NFT.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"\\u8D77\\u62CD\\u4EF7\\u683C\",\n          children: [web3.utils.fromWei(_this.state.startPrice, \"ether\"), \" ether\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"\\u5F53\\u524D\\u62CD\\u5356\\u6700\\u9AD8\\u4EF7\\u683C\",\n          children: web3.utils.fromWei(_this.state.NFT.currentprice, \"ether\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"\\u6536\\u85CF\\u54C1\\u6240\\u6709\\u8005\",\n          children: _this.state.auctionowner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"\\u5F53\\u524D\\u62CD\\u5356\\u6700\\u9AD8\\u51FA\\u4EF7\\u8005\",\n          children: _this.state.NFT.currentowner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, _this);\n    };\n\n    this.renderOwners = () => /*#__PURE__*/_jsxDEV(List, {\n      header: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u6D41\\u8F6C\\u4FE1\\u606F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this),\n      bordered: true,\n      dataSource: this.state.owners,\n      renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Typography.Text, {\n          mark: true,\n          children: \"[ADDRESS]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), \" \", item]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this);\n\n    this.state = {\n      NFT: props.NFT,\n      isConnected: false,\n      address: \"\",\n      bidButtonDisable: true,\n      claimButtonDisable: false,\n      tagColor: \"red\",\n      NFTState: \"正在拍卖\",\n      modalVisible: false,\n      startPrice: 0,\n      auctionowner: \"\",\n      owners: []\n    };\n    this.renderContent = this.renderContent.bind(this);\n    this.claim = this.claim.bind(this);\n  }\n\n  async componentDidMount() {\n    let accounts = await web3.eth.getAccounts();\n\n    if (accounts.length == 0) {\n      this.setState({\n        isConnected: false\n      });\n    } else {\n      this.setState({\n        isConnected: true,\n        address: accounts[0]\n      });\n      let NFT = this.state.NFT;\n\n      if (NFT.onsale == true) {\n        this.setState({\n          NFTState: \"拍卖中\",\n          tagColor: \"red\",\n          bidButtonDisable: false,\n          claimButtonDisable: true\n        });\n      } else if (NFT.setaside == true) {\n        this.setState({\n          NFTState: \"拍卖结束（等待申领）\",\n          tagColor: \"green\",\n          bidButtonDisable: true,\n          claimButtonDisable: false\n        });\n      }\n\n      let ret = await contractInstance.methods.bidprices(NFT.id, 0).call();\n      console.log(ret);\n      this.setState({\n        startPrice: ret\n      });\n      ret = await contractInstance.methods.ownerOf(NFT.id).call();\n      this.setState({\n        auctionowner: ret\n      }); //获取流转信息\n\n      try {\n        let owners = [],\n            ret;\n\n        for (let i = 0; i < NFT.ownerNum; i++) {\n          ret = await contractInstance.methods.owners(NFT.id, i).call();\n          owners.push(ret);\n        }\n\n        console.log(owners);\n        this.setState({\n          owners: owners\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  //竞拍函数\n  async bid() {\n    let NFT = this.state.NFT;\n    let values = this.formRef.current.getFieldValue();\n\n    if (NFT.currentowner != this.state.address) {\n      try {\n        let tx = contractInstance.methods.bid(Number(NFT.id), web3.utils.toWei(values.price, \"ether\")).send({\n          from: this.state.address,\n          value: web3.utils.toWei('0.00000001', 'ether')\n        });\n        message.success('竞价成功');\n        window.location.reload();\n      } catch (e) {\n        console.log(e);\n        message.error(\"竞价失败\");\n      }\n    } else {\n      message.info(\"您已经是出价最高的人了\");\n    }\n  }\n\n  async claim() {\n    let NFT = this.state.NFT;\n\n    if (NFT.currentowner == this.state.address) {\n      try {\n        let tx = await contractInstance.methods.claim(Number(NFT.id)).send({\n          from: this.state.address,\n          value: NFT.currentprice\n        });\n        message.success('认领成功');\n        window.location.reload();\n      } catch (e) {\n        console.log(e);\n        message.error(\"认领失败\");\n      }\n    } else {\n      message.error(\"非竞拍成功者不可认领\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        boxShadow: \"2px 2px 1px 2px #888\",\n        margin: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: this.state.NFT.id,\n        tags: /*#__PURE__*/_jsxDEV(Tag, {\n          color: this.state.tagColor,\n          children: this.state.NFTState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 27\n        }, this),\n        extra: ([/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          disabled: this.state.bidButtonDisable,\n          onClick: () => this.setState({\n            modalVisible: true\n          }),\n          children: \"\\u7ADE\\u4EF7\"\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)], [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          disabled: this.state.claimButtonDisable,\n          onClick: this.claim,\n          children: \"\\u8BA4\\u9886\"\n        }, \"2\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 200,\n        height: 200,\n        src: this.state.NFT.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: this.renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: this.renderOwners()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: this.state.modalVisible,\n        title: \"\\u7ADE\\u4EF7\",\n        okText: \"\\u63D0\\u4EA4\",\n        cancelText: \"\\u53D6\\u6D88\",\n        onCancel: () => {\n          this.setState({\n            modalVisible: false\n          });\n        },\n        onOk: () => {\n          this.bid();\n          this.formRef.current.resetFields();\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          ref: this.formRef,\n          layout: \"vertical\",\n          name: \"bidForm\",\n          initialValues: {\n            modifier: 'public'\n          },\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"price\",\n            label: \"\\u51FA\\u4EF7\",\n            rules: [{\n              required: true,\n              message: '请填写您的出价'\n            }],\n            children: /*#__PURE__*/_jsxDEV(InputNumber, {\n              min: 1,\n              max: 10000000000\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/card/my-bid-card.js"],"names":["React","Tag","Image","Form","List","Typography","Layout","Button","Descriptions","PageHeader","Modal","InputNumber","message","contractInstance","web3","FileProtectOutlined","Content","MyBidCard","Component","constructor","props","formRef","createRef","renderContent","column","state","NFT","name","description","utils","fromWei","startPrice","currentprice","auctionowner","currentowner","renderOwners","owners","item","isConnected","address","bidButtonDisable","claimButtonDisable","tagColor","NFTState","modalVisible","bind","claim","componentDidMount","accounts","eth","getAccounts","length","setState","onsale","setaside","ret","methods","bidprices","id","call","console","log","ownerOf","i","ownerNum","push","e","bid","values","current","getFieldValue","tx","Number","toWei","price","send","from","value","success","window","location","reload","error","info","render","boxShadow","margin","uri","resetFields","modifier","required"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Tag, Image, Form, List, Typography, Layout, Button, Descriptions, PageHeader, Modal, InputNumber, message } from 'antd';\r\nimport contractInstance from '../../utils/config';\r\nimport web3 from '../../utils/InitWeb3';\r\nimport { FileProtectOutlined } from '@ant-design/icons';\r\n\r\nconst {Content} = Layout;\r\n\r\nexport default class MyBidCard extends React.Component{\r\n\r\n    formRef = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            NFT: props.NFT,\r\n            isConnected: false,\r\n            address: \"\",\r\n            bidButtonDisable: true,\r\n            claimButtonDisable: false,\r\n            tagColor: \"red\",\r\n            NFTState: \"正在拍卖\",\r\n            modalVisible: false,\r\n            startPrice: 0,\r\n            auctionowner: \"\",\r\n            owners: [],\r\n        })\r\n\r\n        this.renderContent = this.renderContent.bind(this);\r\n        this.claim = this.claim.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        let accounts = await web3.eth.getAccounts()\r\n        if (accounts.length == 0) {\r\n            this.setState({\r\n                isConnected: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n\r\n            let NFT = this.state.NFT;\r\n\r\n            if(NFT.onsale == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖中\",\r\n                    tagColor: \"red\",\r\n                    bidButtonDisable: false,\r\n                    claimButtonDisable: true,\r\n                })\r\n            }\r\n            else if(NFT.setaside == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖结束（等待申领）\",\r\n                    tagColor: \"green\",\r\n                    bidButtonDisable: true,\r\n                    claimButtonDisable: false,\r\n                })\r\n            }\r\n\r\n            let ret = await contractInstance.methods.bidprices(NFT.id, 0).call();\r\n            console.log(ret);\r\n            this.setState({\r\n                startPrice: ret,\r\n            })\r\n\r\n            ret = await contractInstance.methods.ownerOf(NFT.id).call();\r\n            this.setState({\r\n                auctionowner: ret,\r\n            })\r\n\r\n            //获取流转信息\r\n            try{\r\n                let owners = [], ret;\r\n                for(let i = 0; i < NFT.ownerNum; i++){\r\n                    ret = await contractInstance.methods.owners(NFT.id, i).call();\r\n                    owners.push(ret);\r\n                }\r\n                console.log(owners);\r\n                this.setState({\r\n                    owners: owners,\r\n                })\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n    \r\n    renderContent = (column = 2) =>(\r\n        <Descriptions size=\"small\" column={column} bordered>\r\n            <Descriptions.Item label=\"名称\">{this.state.NFT.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"描述\">{this.state.NFT.description}</Descriptions.Item>\r\n            <Descriptions.Item label=\"起拍价格\">{web3.utils.fromWei(this.state.startPrice, \"ether\")} ether</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高价格\">{web3.utils.fromWei(this.state.NFT.currentprice, \"ether\")}</Descriptions.Item>\r\n            <Descriptions.Item label=\"收藏品所有者\">{this.state.auctionowner}</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高出价者\">{this.state.NFT.currentowner}</Descriptions.Item>\r\n        </Descriptions>\r\n    );\r\n\r\n    renderOwners = () =>(\r\n        <List\r\n        header={<div>流转信息</div>}\r\n        bordered\r\n        dataSource={this.state.owners}\r\n        renderItem={item => (\r\n            <List.Item>\r\n                <Typography.Text mark>[ADDRESS]</Typography.Text> {item}\r\n            </List.Item>\r\n      )}\r\n        />\r\n    );\r\n\r\n    //竞拍函数\r\n    async bid(){\r\n        let NFT = this.state.NFT;\r\n        let values = this.formRef.current.getFieldValue();\r\n\r\n        if(NFT.currentowner != this.state.address){\r\n            try{\r\n                let tx = contractInstance.methods.bid(Number(NFT.id), web3.utils.toWei(values.price, \"ether\")).send({\r\n                    from: this.state.address,\r\n                    value: web3.utils.toWei('0.00000001', 'ether'),\r\n                });\r\n                message.success('竞价成功');\r\n                window.location.reload();\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n                message.error(\"竞价失败\");\r\n            }\r\n        }\r\n        else{\r\n            message.info(\"您已经是出价最高的人了\")\r\n        }\r\n    }\r\n\r\n    async claim(){\r\n        let NFT = this.state.NFT;\r\n        if(NFT.currentowner == this.state.address){\r\n            try{\r\n                let tx = await contractInstance.methods.claim(Number(NFT.id)).send({\r\n                    from: this.state.address,\r\n                    value: NFT.currentprice,\r\n                })\r\n                message.success('认领成功');\r\n                window.location.reload();\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n                message.error(\"认领失败\");\r\n            }\r\n        }\r\n        else{\r\n            message.error(\"非竞拍成功者不可认领\");\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{boxShadow: \"2px 2px 1px 2px #888\", margin: \"5px\"}}>\r\n                <PageHeader\r\n                    title={this.state.NFT.id}\r\n                    tags={<Tag color={this.state.tagColor}>{this.state.NFTState}</Tag>}\r\n                    extra={[\r\n                        <Button key=\"1\" type=\"primary\" disabled={this.state.bidButtonDisable} onClick={()=>this.setState({\r\n                            modalVisible: true,\r\n                        })}>\r\n                            竞价\r\n                        </Button>\r\n                        \r\n                    ],\r\n                    [\r\n                        <Button key=\"2\" type=\"primary\" disabled={this.state.claimButtonDisable} onClick={this.claim}>\r\n                            认领\r\n                        </Button>\r\n                    ]}>\r\n                </PageHeader>\r\n                <Image width={200} height={200} src={this.state.NFT.uri} />\r\n                <Content>{this.renderContent()}</Content>\r\n                <Content>{this.renderOwners()}</Content>\r\n\r\n                <Modal\r\n                    visible={this.state.modalVisible}\r\n                    title=\"竞价\"\r\n                    okText=\"提交\"\r\n                    cancelText=\"取消\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            modalVisible: false,\r\n                        })\r\n                    }}\r\n                    onOk={()=>{\r\n                        this.bid();\r\n                        this.formRef.current.resetFields();\r\n                    }}>\r\n                        <Form\r\n                            ref={this.formRef}\r\n                            layout=\"vertical\"\r\n                            name=\"bidForm\"\r\n                            initialValues={{modifier: 'public'}}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"price\"\r\n                                label=\"出价\"\r\n                                rules={[{ required: true, message: '请填写您的出价' }]}\r\n                            >\r\n                                <InputNumber min={1} max={10000000000}></InputNumber>\r\n                            </Form.Item>\r\n\r\n                        </Form>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}