{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/card/market-card.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Tag, Image, Form, Card, Layout, Button, Descriptions, PageHeader, Modal, InputNumber, message } from 'antd';\nimport contractInstance from '../../utils/config';\nimport web3 from '../../utils/InitWeb3';\nimport { FileProtectOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Content\n} = Layout;\n\nclass MyMarketCard extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n    this.formRef = /*#__PURE__*/React.createRef();\n\n    this.renderContent = function () {\n      let column = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      return /*#__PURE__*/_jsxDEV(Descriptions, {\n        size: \"small\",\n        column: column,\n        children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"\\u540D\\u79F0\",\n          children: _this.state.NFT.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"\\u63CF\\u8FF0\",\n          children: _this.state.NFT.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"\\u8D77\\u62CD\\u4EF7\\u683C\",\n          children: _this.state.NFT.startprice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"\\u5F53\\u524D\\u62CD\\u5356\\u6700\\u9AD8\\u4EF7\\u683C\",\n          children: _this.state.NFT.currentprice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"\\u5F53\\u524D\\u62CD\\u5356\\u6700\\u9AD8\\u51FA\\u4EF7\\u8005\",\n          children: _this.state.NFT.currentowner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, _this);\n    };\n\n    this.state = {\n      NFT: props.NFT,\n      isConnected: false,\n      address: \"\",\n      bidButtonDisable: false,\n      tagColor: \"red\",\n      NFTState: \"正在拍卖\",\n      modalVisible: false\n    };\n    this.renderContent = this.renderContent.bind(this);\n  }\n\n  async componentDidMount() {\n    let accounts = await web3.eth.getAccounts();\n\n    if (accounts.length == 0) {\n      this.setState({\n        isConnected: false\n      });\n    } else {\n      this.setState({\n        isConnected: true,\n        address: accounts[0]\n      });\n      let NFT = this.state.NFT;\n\n      if (NFT.onsale == true) {\n        this.setState({\n          NFTState: \"拍卖中\",\n          tagColor: \"red\",\n          bidButtonDisable: false\n        });\n      } else if (NFT.setaside == true) {\n        this.setState({\n          NFTState: \"拍卖结束（等待申领）\",\n          tagColor: \"green\",\n          bidButtonDisable: true\n        });\n      }\n    }\n  }\n\n  //买方认领函数\n  async bid() {\n    let NFT = this.state.NFT;\n    let values = this.formRef.current.getFieldValue();\n\n    if (NFT.currentowner != this.state.address) {\n      try {\n        let tx = contractInstance.methods.bid(NFT.id, values.price).send({\n          from: this.state.address,\n          value: web3.utils.toWei('0.00000001', 'ether')\n        });\n        message.success('竞价成功');\n        window.location.href = './Profile';\n      } catch (e) {\n        console.log(e);\n        message.error(\"竞价失败\");\n      }\n    } else {\n      message.info(\"您已经是出价最高的人了\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        boxShadow: \"2px 2px 1px 2px #888\",\n        margin: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: this.state.NFT.id,\n        tags: /*#__PURE__*/_jsxDEV(Tag, {\n          color: this.state.tagColor,\n          children: this.state.NFTState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 27\n        }, this),\n        extra: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          disabled: this.state.bidButtonDisable,\n          onClick: () => this.setState({\n            modalVisible: true\n          }),\n          children: \"\\u7ADE\\u4EF7\"\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 200,\n        height: 200,\n        src: this.state.NFT.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: this.renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: this.state.modalVisible,\n        title: \"\\u7ADE\\u4EF7\",\n        okText: \"\\u63D0\\u4EA4\",\n        cancelText: \"\\u53D6\\u6D88\",\n        onCancel: () => {\n          this.setState({\n            modalVisible: false\n          });\n        },\n        onOk: () => {\n          this.bid();\n          this.formRef.current.resetFields();\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          ref: this.formRef,\n          layout: \"vertical\",\n          name: \"bidForm\",\n          initialValues: {\n            modifier: 'public'\n          },\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"price\",\n            label: \"\\u51FA\\u4EF7\",\n            rules: [{\n              required: true,\n              message: '请填写您的出价'\n            }],\n            children: /*#__PURE__*/_jsxDEV(InputNumber, {\n              min: 1,\n              max: 10000000000\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyMarketCard;","map":{"version":3,"sources":["/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/components/card/market-card.js"],"names":["React","Tag","Image","Form","Card","Layout","Button","Descriptions","PageHeader","Modal","InputNumber","message","contractInstance","web3","FileProtectOutlined","Content","MyMarketCard","Component","constructor","props","formRef","createRef","renderContent","column","state","NFT","name","description","startprice","currentprice","currentowner","isConnected","address","bidButtonDisable","tagColor","NFTState","modalVisible","bind","componentDidMount","accounts","eth","getAccounts","length","setState","onsale","setaside","bid","values","current","getFieldValue","tx","methods","id","price","send","from","value","utils","toWei","success","window","location","href","e","console","log","error","info","render","boxShadow","margin","uri","resetFields","modifier","required"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Tag, Image, Form, Card, Layout, Button, Descriptions, PageHeader, Modal, InputNumber, message } from 'antd';\r\nimport contractInstance from '../../utils/config';\r\nimport web3 from '../../utils/InitWeb3';\r\nimport { FileProtectOutlined } from '@ant-design/icons';\r\n\r\nconst {Content} = Layout;\r\n\r\nclass MyMarketCard extends React.Component{\r\n\r\n    formRef = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            NFT: props.NFT,\r\n            isConnected: false,\r\n            address: \"\",\r\n            bidButtonDisable: false,\r\n            tagColor: \"red\",\r\n            NFTState: \"正在拍卖\",\r\n            modalVisible: false,\r\n        })\r\n\r\n        this.renderContent = this.renderContent.bind(this);\r\n\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        let accounts = await web3.eth.getAccounts()\r\n        if (accounts.length == 0) {\r\n            this.setState({\r\n                isConnected: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n\r\n            let NFT = this.state.NFT;\r\n\r\n            if(NFT.onsale == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖中\",\r\n                    tagColor: \"red\",\r\n                    bidButtonDisable: false,\r\n                })\r\n            }\r\n\r\n            else if(NFT.setaside == true){\r\n                this.setState({\r\n                    NFTState: \"拍卖结束（等待申领）\",\r\n                    tagColor: \"green\",\r\n                    bidButtonDisable: true,\r\n                })\r\n            }\r\n        }\r\n    }\r\n    \r\n    renderContent = (column = 2) =>(\r\n        <Descriptions size=\"small\" column={column}>\r\n            <Descriptions.Item label=\"名称\">{this.state.NFT.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"描述\">{this.state.NFT.description}</Descriptions.Item>\r\n            <Descriptions.Item label=\"起拍价格\">{this.state.NFT.startprice}</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高价格\">{this.state.NFT.currentprice}</Descriptions.Item>\r\n            <Descriptions.Item label=\"当前拍卖最高出价者\">{this.state.NFT.currentowner}</Descriptions.Item>\r\n        </Descriptions>\r\n    );\r\n\r\n    //买方认领函数\r\n    async bid(){\r\n        let NFT = this.state.NFT;\r\n        let values = this.formRef.current.getFieldValue();\r\n        if(NFT.currentowner != this.state.address){\r\n            try{\r\n                let tx = contractInstance.methods.bid(NFT.id, values.price).send({\r\n                    from: this.state.address,\r\n                    value: web3.utils.toWei('0.00000001', 'ether'),\r\n                });\r\n                message.success('竞价成功');\r\n                window.location.href = './Profile';\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n                message.error(\"竞价失败\");\r\n            }\r\n        }\r\n        else{\r\n            message.info(\"您已经是出价最高的人了\")\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{boxShadow: \"2px 2px 1px 2px #888\", margin: \"5px\"}}>\r\n                <PageHeader\r\n                    title={this.state.NFT.id}\r\n                    tags={<Tag color={this.state.tagColor}>{this.state.NFTState}</Tag>}\r\n                    extra={[\r\n                        <Button key=\"1\" type=\"primary\" disabled={this.state.bidButtonDisable} onClick={()=>this.setState({\r\n                            modalVisible: true,\r\n                        })}>\r\n                            竞价\r\n                        </Button>\r\n                    ]}\r\n                >\r\n                </PageHeader>\r\n                <Image width={200} height={200} src={this.state.NFT.uri} />\r\n                <Content>{this.renderContent()}</Content>\r\n\r\n                <Modal\r\n                    visible={this.state.modalVisible}\r\n                    title=\"竞价\"\r\n                    okText=\"提交\"\r\n                    cancelText=\"取消\"\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            modalVisible: false,\r\n                        })\r\n                    }}\r\n                    onOk={()=>{\r\n                        this.bid();\r\n                        this.formRef.current.resetFields();\r\n                    }}>\r\n                        <Form\r\n                            ref={this.formRef}\r\n                            layout=\"vertical\"\r\n                            name=\"bidForm\"\r\n                            initialValues={{modifier: 'public'}}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"price\"\r\n                                label=\"出价\"\r\n                                rules={[{ required: true, message: '请填写您的出价' }]}\r\n                            >\r\n                                <InputNumber min={1} max={10000000000}></InputNumber>\r\n                            </Form.Item>\r\n\r\n                        </Form>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyMarketCard;"]},"metadata":{},"sourceType":"module"}