{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/apple/Documents/openbush/openbush_frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{ReactDOM}from\"react\";import{Button,Form,Input,List,Modal}from\"antd\";import web3 from\"../utils/InitWeb3\";import contractInstance from\"../utils/config\";import MyBidCard from\"../components/card/my-bid-card\";import{jsx as _jsx}from\"react/jsx-runtime\";var MyBidTab=/*#__PURE__*/function(_React$Component){_inherits(MyBidTab,_React$Component);var _super=_createSuper(MyBidTab);function MyBidTab(){var _this;_classCallCheck(this,MyBidTab);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={myBids:[],myBidNum:0,isConnected:false,address:\"\"};return _this;}_createClass(MyBidTab,[{key:\"getNFTs\",value:function(){var _getNFTs=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(NFTIds){var NFTs,i,NFT;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:NFTs=[];i=0;case 2:if(!(i<10&&NFTIds[i]!=11)){_context.next=11;break;}_context.next=5;return contractInstance.methods.NFTs(NFTIds[i]).call();case 5:NFT=_context.sent;NFTs.push(NFT);console.log(NFT);case 8:i++;_context.next=2;break;case 11:this.setState({myBids:NFTs,myBidNum:i});case 12:case\"end\":return _context.stop();}}},_callee,this);}));function getNFTs(_x){return _getNFTs.apply(this,arguments);}return getNFTs;}()},{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var accounts,NFTIds;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return web3.eth.getAccounts();case 2:accounts=_context2.sent;if(!(accounts.length==0)){_context2.next=7;break;}this.setState({isConnected:false});_context2.next=16;break;case 7:_context2.next=9;return this.setState({isConnected:true,address:accounts[0]});case 9:_context2.next=11;return contractInstance.methods.getBid().call({from:accounts[0]});case 11:NFTIds=_context2.sent;console.log(NFTIds);_context2.next=15;return this.getNFTs(NFTIds);case 15:console.log(this.state.myBids);case 16:case\"end\":return _context2.stop();}}},_callee2,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(List,{grid:{gutter:32,column:2},itemLayout:\"horizontal\",dataSource:this.state.myBids,renderItem:function renderItem(item){return/*#__PURE__*/_jsx(List.Item,{children:/*#__PURE__*/_jsx(MyBidCard,{NFT:item})});}})});}}]);return MyBidTab;}(React.Component);export default MyBidTab;","map":{"version":3,"sources":["/Users/apple/Documents/openbush/openbush_frontend/src/Dapp/tabs/my-bid.js"],"names":["React","ReactDOM","Button","Form","Input","List","Modal","web3","contractInstance","MyBidCard","MyBidTab","state","myBids","myBidNum","isConnected","address","NFTIds","NFTs","i","methods","call","NFT","push","console","log","setState","eth","getAccounts","accounts","length","getBid","from","getNFTs","gutter","column","item","Component"],"mappings":"qwBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAAQC,MAAR,CAAgBC,IAAhB,CAAsBC,KAAtB,CAA6BC,IAA7B,CAAmCC,KAAnC,KAA+C,MAA/C,CAEA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,iBAA7B,CACA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,C,8CAEMC,CAAAA,Q,+UACFC,K,CAAM,CACFC,MAAM,CAAE,EADN,CAEFC,QAAQ,CAAE,CAFR,CAGFC,WAAW,CAAE,KAHX,CAIFC,OAAO,CAAE,EAJP,C,2IAON,iBAAcC,MAAd,iIACQC,IADR,CACe,EADf,CAEQC,CAFR,CAEY,CAFZ,aAGUA,CAAC,CAAG,EAAJ,EAAUF,MAAM,CAACE,CAAD,CAAN,EAAa,EAHjC,iDAIwBV,CAAAA,gBAAgB,CAACW,OAAjB,CAAyBF,IAAzB,CAA8BD,MAAM,CAACE,CAAD,CAApC,EAAyCE,IAAzC,EAJxB,QAIYC,GAJZ,eAKQJ,IAAI,CAACK,IAAL,CAAUD,GAAV,EACAE,OAAO,CAACC,GAAR,CAAYH,GAAZ,EANR,OAGqCH,CAAC,EAHtC,+BAQI,KAAKO,QAAL,CAAc,CACVb,MAAM,CAAEK,IADE,CAEVJ,QAAQ,CAAEK,CAFA,CAAd,EARJ,4D,4MAcA,mLACyBX,CAAAA,IAAI,CAACmB,GAAL,CAASC,WAAT,EADzB,QACQC,QADR,qBAEOA,QAAQ,CAACC,MAAT,EAAmB,CAF1B,2BAGQ,KAAKJ,QAAL,CAAc,CACVX,WAAW,CAAE,KADH,CAAd,EAHR,sDAQc,MAAKW,QAAL,CAAc,CAChBX,WAAW,CAAE,IADG,CAEhBC,OAAO,CAAEa,QAAQ,CAAC,CAAD,CAFD,CAAd,CARd,gCAiB2BpB,CAAAA,gBAAgB,CAACW,OAAjB,CAAyBW,MAAzB,GAAkCV,IAAlC,CAAuC,CACtDW,IAAI,CAAEH,QAAQ,CAAC,CAAD,CADwC,CAAvC,CAjB3B,SAiBYZ,MAjBZ,gBAoBQO,OAAO,CAACC,GAAR,CAAYR,MAAZ,EApBR,wBAsBc,MAAKgB,OAAL,CAAahB,MAAb,CAtBd,SAuBQO,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,MAAvB,EAvBR,8D,mIA2BA,iBAAQ,CACJ,mBACI,kCACI,KAAC,IAAD,EACI,IAAI,CAAE,CAAEqB,MAAM,CAAE,EAAV,CAAcC,MAAM,CAAE,CAAtB,CADV,CAEI,UAAU,CAAC,YAFf,CAGI,UAAU,CAAE,KAAKvB,KAAL,CAAWC,MAH3B,CAII,UAAU,CAAE,oBAACuB,IAAD,qBACR,KAAC,IAAD,CAAM,IAAN,wBACI,KAAC,SAAD,EAAW,GAAG,CAAEA,IAAhB,EADJ,EADQ,EAJhB,EADJ,EADJ,CAeH,C,sBAjEkBnC,KAAK,CAACoC,S,EAqE7B,cAAe1B,CAAAA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { ReactDOM } from \"react\";\r\nimport {Button, Form, Input, List, Modal} from \"antd\";\r\n\r\nimport web3 from \"../utils/InitWeb3\";\r\nimport contractInstance from \"../utils/config\";\r\nimport MyBidCard from \"../components/card/my-bid-card\";\r\n\r\nclass MyBidTab extends React.Component{\r\n    state={\r\n        myBids: [],\r\n        myBidNum: 0,\r\n        isConnected: false,\r\n        address: \"\",\r\n    }\r\n\r\n    async getNFTs(NFTIds){\r\n        let NFTs = [];\r\n        let i = 0;\r\n        for(; i < 10 && NFTIds[i] != 11; i++){\r\n            let NFT = await contractInstance.methods.NFTs(NFTIds[i]).call()\r\n            NFTs.push(NFT);\r\n            console.log(NFT);\r\n        }\r\n        this.setState({\r\n            myBids: NFTs,\r\n            myBidNum: i,\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length == 0){\r\n            this.setState({\r\n                isConnected: false,\r\n            })\r\n        }\r\n        else {\r\n            await this.setState({\r\n                isConnected: true,\r\n                address: accounts[0]\r\n            })\r\n            // let tx = await contractInstance.methods.refreshAuction().send({\r\n            //     from: accounts[0],\r\n            //     gas: 3000000,\r\n            // });\r\n\r\n            let NFTIds = await contractInstance.methods.getBid().call({\r\n                from: accounts[0],\r\n            });\r\n            console.log(NFTIds);\r\n\r\n            await this.getNFTs(NFTIds);\r\n            console.log(this.state.myBids);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <List\r\n                    grid={{ gutter: 32, column: 2 }}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={this.state.myBids}\r\n                    renderItem={(item) =>(\r\n                        <List.Item>\r\n                            <MyBidCard NFT={item}/>\r\n                        </List.Item>\r\n                    )}    \r\n                >\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyBidTab;"]},"metadata":{},"sourceType":"module"}